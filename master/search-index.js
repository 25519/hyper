var searchIndex = {};
searchIndex["hyper"] = {"doc":"# Hyper","items":[[3,"Uri","hyper","The Request-URI of a Request&#39;s StartLine.",null,null],[3,"Body","","A `Stream` for `Chunk`s used in requests and responses.",null,null],[3,"Chunk","","A piece of a message body.",null,null],[4,"Method","","The Request Method (VERB)",null,null],[13,"Options","","OPTIONS",0,null],[13,"Get","","GET",0,null],[13,"Post","","POST",0,null],[13,"Put","","PUT",0,null],[13,"Delete","","DELETE",0,null],[13,"Head","","HEAD",0,null],[13,"Trace","","TRACE",0,null],[13,"Connect","","CONNECT",0,null],[13,"Patch","","PATCH",0,null],[13,"Extension","","Method extensions. An example would be `let m = Extension(&quot;FOO&quot;.to_string())`.",0,null],[4,"HttpVersion","","Represents a version of the HTTP spec.",null,null],[13,"Http09","","`HTTP/0.9`",1,null],[13,"Http10","","`HTTP/1.0`",1,null],[13,"Http11","","`HTTP/1.1`",1,null],[13,"H2","","`HTTP/2.0` over TLS",1,null],[13,"H2c","","`HTTP/2.0` over cleartext",1,null],[0,"client","","HTTP Client",null,null],[11,"new_service","alloc::arc","",2,null],[11,"new_service","alloc::rc","",3,null],[11,"call","alloc::boxed","",4,null],[11,"call","alloc::rc","",3,null],[11,"call","alloc::arc","",2,null],[8,"Service","hyper::client","An asynchronous function from `Request` to a `Response`.",null,null],[16,"Request","","Requests handled by the service.",5,null],[16,"Response","","Responses given by the service.",5,null],[16,"Error","","Errors produced by the service.",5,null],[16,"Future","","The future response value.",5,null],[10,"call","","Process the request and return the response asynchronously.",5,null],[3,"HttpConnector","","A connector for the `http` scheme.",null,null],[3,"Request","","A client request to a remote server.",null,null],[3,"Response","","A response for a client request to a remote server.",null,null],[3,"Client","","A Client to make outgoing HTTP requests.",null,null],[3,"FutureResponse","","A `Future` that will resolve to an HTTP Response.",null,null],[3,"Config","","Configuration for a Client",null,null],[3,"UseDefaultConnector","","Phantom type used to signal that `Config` should create a `HttpConnector`.",null,null],[11,"clone","","",6,null],[11,"new","","Construct a new HttpConnector.",6,{"inputs":[{"name":"usize"},{"name":"handle"}],"output":{"name":"httpconnector"}}],[11,"fmt","","",6,null],[11,"call","","",6,null],[11,"new","","Construct a new Request.",7,{"inputs":[{"name":"method"},{"name":"uri"}],"output":{"name":"request"}}],[11,"uri","","Read the Request Uri.",7,null],[11,"version","","Read the Request Version.",7,null],[11,"headers","","Read the Request headers.",7,null],[11,"method","","Read the Request method.",7,null],[11,"set_method","","Set the Method of this request.",7,null],[11,"headers_mut","","Get a mutable reference to the Request headers.",7,null],[11,"set_uri","","Set the `Uri` of this request.",7,null],[11,"set_version","","Set the `HttpVersion` of this request.",7,null],[11,"set_body","","Set the body of the request.",7,null],[11,"set_proxy","","Set that the URI should use the absolute form.",7,null],[11,"fmt","","",7,null],[11,"headers","","Get the headers from the server.",8,null],[11,"status","","Get the status from the server.",8,null],[11,"status_raw","","Get the raw status code and reason.",8,null],[11,"version","","Get the HTTP version of this response from the server.",8,null],[11,"body","","Take the `Body` of this response.",8,null],[11,"fmt","","",8,null],[8,"Connect","","A connector creates an Io to a remote address..",null,null],[16,"Output","","The connected Io Stream.",9,null],[16,"Future","","A Future that will resolve to the connected Stream.",9,null],[10,"connect","","Connect to a remote address.",9,null],[11,"new","","Create a new Client with the default config.",10,{"inputs":[{"name":"handle"}],"output":{"name":"client"}}],[11,"configure","","Configure a Client.",10,{"inputs":[],"output":{"name":"config"}}],[11,"handle","","Return a reference to a handle to the event loop this Client is associated with.",10,null],[11,"get","","Send a GET Request using this Client.",10,null],[11,"request","","Send a constructed Request using this Client.",10,null],[11,"fmt","","",11,null],[11,"poll","","",11,null],[11,"call","","",10,null],[11,"clone","","",10,null],[11,"fmt","","",10,null],[11,"clone","","",12,null],[11,"fmt","","",12,null],[11,"default","","",13,{"inputs":[],"output":{"name":"config"}}],[11,"body","","Set the body stream to be used by the `Client`.",13,null],[11,"connector","","Set the `Connect` type to be used.",13,null],[11,"keep_alive","","Enable or disable keep-alive mechanics.",13,null],[11,"keep_alive_timeout","","Set an optional timeout for idle sockets being kept-alive.",13,null],[11,"build","","Construct the Client with this configuration.",13,null],[11,"build","","Construct the Client with this configuration.",13,null],[11,"fmt","","",13,null],[11,"clone","","",13,null],[0,"error","hyper","Error and Result module.",null,null],[3,"UriError","hyper::error","An error parsing a `Uri`.",null,null],[4,"Error","","A set of errors that can occur parsing HTTP streams.",null,null],[13,"Method","","An invalid `Method`, such as `GE,T`.",14,null],[13,"Uri","","An invalid `Uri`, such as `exam ple.domain`.",14,null],[13,"Version","","An invalid `HttpVersion`, such as `HTP/1.1`",14,null],[13,"Header","","An invalid `Header`.",14,null],[13,"TooLarge","","A message head is too large to be reasonable.",14,null],[13,"Incomplete","","A message reached EOF, but is not complete.",14,null],[13,"Status","","An invalid `Status`, such as `1337 ELITE`.",14,null],[13,"Timeout","","A timeout occurred waiting for an IO event.",14,null],[13,"Io","","An `io::Error` that occurred while trying to read or write to a network stream.",14,null],[13,"Utf8","","Parsing a field as string failed",14,null],[6,"Result","","Result type often returned from methods that can have hyper `Error`s.",null,null],[11,"fmt","","",14,null],[11,"fmt","","",14,null],[11,"description","","",14,null],[11,"cause","","",14,null],[11,"from","","",14,{"inputs":[{"name":"urierror"}],"output":{"name":"error"}}],[11,"from","","",14,{"inputs":[{"name":"ioerror"}],"output":{"name":"error"}}],[11,"from","","",14,{"inputs":[{"name":"utf8error"}],"output":{"name":"error"}}],[11,"from","","",14,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"error"}}],[11,"from","","",14,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"fmt","hyper","",0,null],[11,"hash","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",0,null],[11,"as_ref","","",0,null],[11,"safe","","Whether a method is considered &quot;safe&quot;, meaning the request is\nessentially read-only.",0,null],[11,"idempotent","","Whether a method is considered &quot;idempotent&quot;, meaning the request has\nthe same result if executed multiple times.",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"method"}}],[0,"header","","Headers container, and common header fields.",null,null],[11,"matches","language_tags","Matches language tags. The first language acts as a language range, the second one is used\nas a normal language tag. None fields in the language range are ignored. If the language\ntag has more extlangs than the range these extlangs are ignored. Matches are\ncase-insensitive. `*` in language ranges are represented using `None` values. The language\nrange `*` that matches language tags is created by the default language tag:\n`let wildcard: LanguageTag = Default::default();.`",15,null],[11,"is_language_range","","Checks if it is a language range, meaning that there are no extension and privateuse tags.",15,null],[11,"canonicalize","","Returns the canonical version of the language tag.",15,null],[11,"eq","","",16,null],[11,"fmt","","",16,null],[11,"description","","",16,null],[11,"fmt","","",16,null],[11,"clone","","",15,null],[11,"default","","",15,{"inputs":[],"output":{"name":"languagetag"}}],[11,"fmt","","",15,null],[11,"eq","","",15,null],[11,"from_str","","",15,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",15,null],[3,"LanguageTag","hyper::header","A language tag as described in [BCP47](http://tools.ietf.org/html/bcp47).",null,null],[12,"language","","Language subtags are used to indicate the language, ignoring all\nother aspects such as script, region or spefic invariants.",15,null],[12,"extlangs","","Extended language subtags are used to identify certain specially\nselected languages that, for various historical and compatibility\nreasons, are closely identified with or tagged using an existing\nprimary language subtag.",15,null],[12,"script","","Script subtags are used to indicate the script or writing system\nvariations that distinguish the written forms of a language or its\ndialects.",15,null],[12,"region","","Region subtags are used to indicate linguistic variations associated\nwith or appropriate to a specific country, territory, or region.\nTypically, a region subtag is used to indicate variations such as\nregional dialects or usage, or region-specific spelling conventions.\nIt can also be used to indicate that content is expressed in a way\nthat is appropriate for use throughout a region, for instance,\nSpanish content tailored to be useful throughout Latin America.",15,null],[12,"variants","","Variant subtags are used to indicate additional, well-recognized\nvariations that define a language or its dialects that are not\ncovered by other available subtags.",15,null],[12,"extensions","","Extensions provide a mechanism for extending language tags for use in\nvarious applications.  They are intended to identify information that\nis commonly used in association with languages or language tags but\nthat is not part of language identification.",15,null],[12,"privateuse","","Private use subtags are used to indicate distinctions in language\nthat are important in a given context by private agreement.",15,null],[3,"EntityTag","","An entity tag, defined in [RFC7232](https://tools.ietf.org/html/rfc7232#section-2.3)",null,null],[12,"weak","","Weakness indicator for the tag",17,null],[3,"HttpDate","","A `time::Time` with HTTP formatting and parsing",null,null],[12,"0","","",18,null],[3,"Quality","","Represents a quality used in quality values.",null,null],[12,"0","","",19,null],[3,"QualityItem","","Represents an item with a quality value as defined in\n[RFC7231](https://tools.ietf.org/html/rfc7231#section-5.3.1).",null,null],[12,"item","","The actual contents of the field.",20,null],[12,"quality","","The quality (client or server preference) for the value.",20,null],[3,"Accept","","`Accept` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.2)",null,null],[12,"0","","",21,null],[3,"AccessControlAllowCredentials","","`Access-Control-Allow-Credentials` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-allow-headers-response-header)",null,null],[3,"AccessControlAllowHeaders","","`Access-Control-Allow-Headers` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-allow-headers-response-header)",null,null],[12,"0","","",22,null],[3,"AccessControlAllowMethods","","`Access-Control-Allow-Methods` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-allow-methods-response-header)",null,null],[12,"0","","",23,null],[3,"AccessControlExposeHeaders","","`Access-Control-Expose-Headers` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-expose-headers-response-header)",null,null],[12,"0","","",24,null],[3,"AccessControlMaxAge","","`Access-Control-Max-Age` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-max-age-response-header)",null,null],[12,"0","","",25,null],[3,"AccessControlRequestHeaders","","`Access-Control-Request-Headers` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-request-headers-request-header)",null,null],[12,"0","","",26,null],[3,"AccessControlRequestMethod","","`Access-Control-Request-Method` header, part of\n[CORS](http://www.w3.org/TR/cors/#access-control-request-method-request-header)",null,null],[12,"0","","",27,null],[3,"AcceptCharset","","`Accept-Charset` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.3)",null,null],[12,"0","","",28,null],[3,"AcceptEncoding","","`Accept-Encoding` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.4)",null,null],[12,"0","","",29,null],[3,"AcceptLanguage","","`Accept-Language` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.3.5)",null,null],[12,"0","","",30,null],[3,"AcceptRanges","","`Accept-Ranges` header, defined in\n[RFC7233](http://tools.ietf.org/html/rfc7233#section-2.3)",null,null],[12,"0","","",31,null],[3,"Allow","","`Allow` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-7.4.1)",null,null],[12,"0","","",32,null],[3,"Authorization","","`Authorization` header, defined in [RFC7235](https://tools.ietf.org/html/rfc7235#section-4.2)",null,null],[12,"0","","",33,null],[3,"Basic","","Credential holder for Basic Authentication",null,null],[12,"username","","The username as a possibly empty string",34,null],[12,"password","","The password. `None` if the `:` delimiter character was not\npart of the parsed input.",34,null],[3,"Bearer","","Token holder for Bearer Authentication, most often seen with oauth",null,null],[12,"token","","Actual bearer token as a string",35,null],[3,"CacheControl","","`Cache-Control` header, defined in [RFC7234](https://tools.ietf.org/html/rfc7234#section-5.2)",null,null],[12,"0","","",36,null],[3,"Connection","","`Connection` header, defined in\n[RFC7230](http://tools.ietf.org/html/rfc7230#section-6.1)",null,null],[12,"0","","",37,null],[3,"ContentDisposition","","A `Content-Disposition` header, (re)defined in [RFC6266](https://tools.ietf.org/html/rfc6266)",null,null],[12,"disposition","","The disposition",38,null],[12,"parameters","","Disposition parameters",38,null],[3,"ContentLength","","`Content-Length` header, defined in\n[RFC7230](http://tools.ietf.org/html/rfc7230#section-3.3.2)",null,null],[12,"0","","",39,null],[3,"ContentEncoding","","`Content-Encoding` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-3.1.2.2)",null,null],[12,"0","","",40,null],[3,"ContentLanguage","","`Content-Language` header, defined in\n[RFC7231](https://tools.ietf.org/html/rfc7231#section-3.1.3.2)",null,null],[12,"0","","",41,null],[3,"ContentLocation","","`Content-Location` header, defined in\n[RFC7231](https://tools.ietf.org/html/rfc7231#section-3.1.4.2)",null,null],[12,"0","","",42,null],[3,"ContentRange","","`Content-Range` header, defined in\n[RFC7233](http://tools.ietf.org/html/rfc7233#section-4.2)",null,null],[12,"0","","",43,null],[3,"ContentType","","`Content-Type` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-3.1.1.5)",null,null],[12,"0","","",44,null],[3,"Cookie","","`Cookie` header, defined in [RFC6265](http://tools.ietf.org/html/rfc6265#section-5.4)",null,null],[12,"0","","",45,null],[3,"Date","","`Date` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-7.1.1.2)",null,null],[12,"0","","",46,null],[3,"ETag","","`ETag` header, defined in [RFC7232](http://tools.ietf.org/html/rfc7232#section-2.3)",null,null],[12,"0","","",47,null],[3,"Expires","","`Expires` header, defined in [RFC7234](http://tools.ietf.org/html/rfc7234#section-5.3)",null,null],[12,"0","","",48,null],[3,"From","","`From` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-5.5.1)",null,null],[12,"0","","",49,null],[3,"Host","","The `Host` header.",null,null],[3,"IfModifiedSince","","`If-Modified-Since` header, defined in\n[RFC7232](http://tools.ietf.org/html/rfc7232#section-3.3)",null,null],[12,"0","","",50,null],[3,"IfUnmodifiedSince","","`If-Unmodified-Since` header, defined in\n[RFC7232](http://tools.ietf.org/html/rfc7232#section-3.4)",null,null],[12,"0","","",51,null],[3,"LastModified","","`Last-Modified` header, defined in\n[RFC7232](http://tools.ietf.org/html/rfc7232#section-2.2)",null,null],[12,"0","","",52,null],[3,"Location","","`Location` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-7.1.2)",null,null],[3,"Origin","","The `Origin` header.",null,null],[3,"Prefer","","`Prefer` header, defined in [RFC7240](http://tools.ietf.org/html/rfc7240)",null,null],[12,"0","","",53,null],[3,"PreferenceApplied","","`Preference-Applied` header, defined in [RFC7240](http://tools.ietf.org/html/rfc7240)",null,null],[12,"0","","",54,null],[3,"Referer","","`Referer` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.5.2)",null,null],[3,"Server","","`Server` header, defined in [RFC7231](http://tools.ietf.org/html/rfc7231#section-7.4.2)",null,null],[3,"SetCookie","","`Set-Cookie` header, defined [RFC6265](http://tools.ietf.org/html/rfc6265#section-4.1)",null,null],[12,"0","","",55,null],[3,"StrictTransportSecurity","","`StrictTransportSecurity` header, defined in [RFC6797](https://tools.ietf.org/html/rfc6797)",null,null],[12,"include_subdomains","","Signals the UA that the HSTS Policy applies to this HSTS Host as well as\nany subdomains of the host&#39;s domain name.",56,null],[12,"max_age","","Specifies the number of seconds, after the reception of the STS header\nfield, during which the UA regards the host (from whom the message was\nreceived) as a Known HSTS Host.",56,null],[3,"TransferEncoding","","`Transfer-Encoding` header, defined in\n[RFC7230](http://tools.ietf.org/html/rfc7230#section-3.3.1)",null,null],[12,"0","","",57,null],[3,"Upgrade","","`Upgrade` header, defined in [RFC7230](http://tools.ietf.org/html/rfc7230#section-6.7)",null,null],[12,"0","","",58,null],[3,"Protocol","","Protocols that appear in the `Upgrade` header field",null,null],[12,"name","","The protocol identifier",59,null],[12,"version","","The optional version of the protocol, often in the format &quot;DIGIT.DIGIT&quot; (e.g.. &quot;1.2&quot;)",59,null],[3,"UserAgent","","`User-Agent` header, defined in\n[RFC7231](http://tools.ietf.org/html/rfc7231#section-5.5.3)",null,null],[3,"Warning","","`Warning` header, defined in [RFC7234](https://tools.ietf.org/html/rfc7234#section-5.5)",null,null],[12,"code","","The 3 digit warn code.",60,null],[12,"agent","","The name or pseudonym of the server adding this header.",60,null],[12,"text","","The warning message describing the error.",60,null],[12,"date","","An optional warning date.",60,null],[3,"Link","","The `Link` header, defined in\n[RFC5988](http://tools.ietf.org/html/rfc5988#section-5)",null,null],[3,"LinkValue","","A single `link-value` of a `Link` header, based on:\n[RFC5988](http://tools.ietf.org/html/rfc5988#section-5)",null,null],[3,"Raw","","A raw header value.",null,null],[3,"Headers","","A map of header fields on requests and responses.",null,null],[3,"HeadersItems","","An `Iterator` over the fields in a `Headers` map.",null,null],[3,"HeaderView","","Returned with the `HeadersItems` iterator.",null,null],[4,"Charset","","A Mime charset.",null,null],[13,"Us_Ascii","","US ASCII",61,null],[13,"Iso_8859_1","","ISO-8859-1",61,null],[13,"Iso_8859_2","","ISO-8859-2",61,null],[13,"Iso_8859_3","","ISO-8859-3",61,null],[13,"Iso_8859_4","","ISO-8859-4",61,null],[13,"Iso_8859_5","","ISO-8859-5",61,null],[13,"Iso_8859_6","","ISO-8859-6",61,null],[13,"Iso_8859_7","","ISO-8859-7",61,null],[13,"Iso_8859_8","","ISO-8859-8",61,null],[13,"Iso_8859_9","","ISO-8859-9",61,null],[13,"Iso_8859_10","","ISO-8859-10",61,null],[13,"Shift_Jis","","Shift_JIS",61,null],[13,"Euc_Jp","","EUC-JP",61,null],[13,"Iso_2022_Kr","","ISO-2022-KR",61,null],[13,"Euc_Kr","","EUC-KR",61,null],[13,"Iso_2022_Jp","","ISO-2022-JP",61,null],[13,"Iso_2022_Jp_2","","ISO-2022-JP-2",61,null],[13,"Iso_8859_6_E","","ISO-8859-6-E",61,null],[13,"Iso_8859_6_I","","ISO-8859-6-I",61,null],[13,"Iso_8859_8_E","","ISO-8859-8-E",61,null],[13,"Iso_8859_8_I","","ISO-8859-8-I",61,null],[13,"Gb2312","","GB2312",61,null],[13,"Big5","","Big5",61,null],[13,"Koi8_R","","KOI8-R",61,null],[13,"Ext","","An arbitrary charset specified as a string",61,null],[4,"Encoding","","A value to represent an encoding used in `Transfer-Encoding`\nor `Accept-Encoding` header.",null,null],[13,"Chunked","","The `chunked` encoding.",62,null],[13,"Brotli","","The `br` encoding.",62,null],[13,"Gzip","","The `gzip` encoding.",62,null],[13,"Deflate","","The `deflate` encoding.",62,null],[13,"Compress","","The `compress` encoding.",62,null],[13,"Identity","","The `identity` encoding.",62,null],[13,"EncodingExt","","Some other encoding that is less common, can be any String.",62,null],[4,"AccessControlAllowOrigin","","The `Access-Control-Allow-Origin` response header,\npart of [CORS](http://www.w3.org/TR/cors/#access-control-allow-origin-response-header)",null,null],[13,"Any","","Allow all origins",63,null],[13,"Null","","A hidden origin",63,null],[13,"Value","","Allow one particular origin",63,null],[4,"RangeUnit","","Range Units, described in [RFC7233](http://tools.ietf.org/html/rfc7233#section-2)",null,null],[13,"Bytes","","Indicating byte-range requests are supported.",64,null],[13,"None","","Reserved as keyword, indicating no ranges are supported.",64,null],[13,"Unregistered","","The given range unit is not registered at IANA.",64,null],[4,"CacheDirective","","`CacheControl` contains a list of these directives.",null,null],[13,"NoCache","","&quot;no-cache&quot;",65,null],[13,"NoStore","","&quot;no-store&quot;",65,null],[13,"NoTransform","","&quot;no-transform&quot;",65,null],[13,"OnlyIfCached","","&quot;only-if-cached&quot;",65,null],[13,"MaxAge","","&quot;max-age=delta&quot;",65,null],[13,"MaxStale","","&quot;max-stale=delta&quot;",65,null],[13,"MinFresh","","&quot;min-fresh=delta&quot;",65,null],[13,"MustRevalidate","","&quot;must-revalidate&quot;",65,null],[13,"Public","","&quot;public&quot;",65,null],[13,"Private","","&quot;private&quot;",65,null],[13,"ProxyRevalidate","","&quot;proxy-revalidate&quot;",65,null],[13,"SMaxAge","","&quot;s-maxage=delta&quot;",65,null],[13,"Extension","","Extension directives. Optionally include an argument.",65,null],[4,"ConnectionOption","","Values that can be in the `Connection` header.",null,null],[13,"KeepAlive","","The `keep-alive` connection value.",66,null],[13,"Close","","The `close` connection value.",66,null],[13,"ConnectionHeader","","Values in the Connection header that are supposed to be names of other Headers.",66,null],[4,"DispositionType","","The implied disposition of the content of the HTTP body",null,null],[13,"Inline","","Inline implies default processing",67,null],[13,"Attachment","","Attachment implies that the recipient should prompt the user to save the response locally,\nrather than process it normally (as per its media type).",67,null],[13,"Ext","","Extension type.  Should be handled by recipients the same way as Attachment",67,null],[4,"DispositionParam","","A parameter to the disposition type",null,null],[13,"Filename","","A Filename consisting of a Charset, an optional LanguageTag, and finally a sequence of\nbytes representing the filename",68,null],[13,"Ext","","Extension type consisting of token and value.  Recipients should ignore unrecognized\nparameters.",68,null],[4,"ContentRangeSpec","","Content-Range, described in [RFC7233](https://tools.ietf.org/html/rfc7233#section-4.2)",null,null],[13,"Bytes","","Byte range",69,null],[12,"range","hyper::header::ContentRangeSpec","First and last bytes of the range, omitted if request could not be\nsatisfied",69,null],[12,"instance_length","","Total length of the instance, can be omitted if unknown",69,null],[13,"Unregistered","hyper::header","Custom range, with unit not registered at IANA",69,null],[12,"unit","hyper::header::ContentRangeSpec","other-range-unit",69,null],[12,"resp","","other-range-resp",69,null],[4,"Expect","hyper::header","The `Expect` header.",null,null],[13,"Continue","","The value `100-continue`.",70,null],[4,"IfMatch","","`If-Match` header, defined in\n[RFC7232](https://tools.ietf.org/html/rfc7232#section-3.1)",null,null],[13,"Any","","Any value is a match",71,null],[13,"Items","","Only the listed items are a match",71,null],[4,"IfNoneMatch","","`If-None-Match` header, defined in\n[RFC7232](https://tools.ietf.org/html/rfc7232#section-3.2)",null,null],[13,"Any","","Any value is a match",72,null],[13,"Items","","Only the listed items are a match",72,null],[4,"IfRange","","`If-Range` header, defined in [RFC7233](http://tools.ietf.org/html/rfc7233#section-3.2)",null,null],[13,"EntityTag","","The entity-tag the client has of the resource",73,null],[13,"Date","","The date when the client retrieved the resource",73,null],[4,"Pragma","","The `Pragma` header defined by HTTP/1.0.",null,null],[13,"NoCache","","Corresponds to the `no-cache` value.",74,null],[13,"Ext","","Every value other than `no-cache`.",74,null],[4,"Preference","","Prefer contains a list of these preferences.",null,null],[13,"RespondAsync","","&quot;respond-async&quot;",75,null],[13,"ReturnRepresentation","","&quot;return=representation&quot;",75,null],[13,"ReturnMinimal","","&quot;return=minimal&quot;",75,null],[13,"HandlingStrict","","&quot;handling=strict&quot;",75,null],[13,"HandlingLenient","","&quot;handling=lenient&quot;",75,null],[13,"Wait","","&quot;wait=delta&quot;",75,null],[13,"Extension","","Extension preferences. Always has a value, if none is specified it is\njust &quot;&quot;. A preference can also have a list of parameters.",75,null],[4,"Range","","`Range` header, defined in [RFC7233](https://tools.ietf.org/html/rfc7233#section-3.1)",null,null],[13,"Bytes","","Byte range",76,null],[13,"Unregistered","","Custom range, with unit not registered at IANA\n(`other-range-unit`: String , `other-range-set`: String)",76,null],[4,"ByteRangeSpec","","Each `Range::Bytes` header can contain one or more `ByteRangeSpecs`.\nEach `ByteRangeSpec` defines a range of bytes to fetch",null,null],[13,"FromTo","","Get all bytes between x and y (&quot;x-y&quot;)",77,null],[13,"AllFrom","","Get all bytes starting from x (&quot;x-&quot;)",77,null],[13,"Last","","Get last x bytes (&quot;-x&quot;)",77,null],[4,"ReferrerPolicy","","`Referrer-Policy` header, part of\n[Referrer Policy](https://www.w3.org/TR/referrer-policy/#referrer-policy-header)",null,null],[13,"NoReferrer","","`no-referrer`",78,null],[13,"NoReferrerWhenDowngrade","","`no-referrer-when-downgrade`",78,null],[13,"SameOrigin","","`same-origin`",78,null],[13,"Origin","","`origin`",78,null],[13,"OriginWhenCrossOrigin","","`origin-when-cross-origin`",78,null],[13,"UnsafeUrl","","`unsafe-url`",78,null],[13,"StrictOrigin","","`strict-origin`",78,null],[13,"StrictOriginWhenCrossOrigin","","`strict-origin-when-cross-origin`",78,null],[4,"RetryAfter","","The `Retry-After` header.",null,null],[13,"Delay","","Retry after this duration has elapsed",79,null],[13,"DateTime","","Retry after the given DateTime",79,null],[4,"ProtocolName","","A protocol name used to identify a specific protocol. Names are case-sensitive\nexcept for the `WebSocket` value.",null,null],[13,"Http","","`HTTP` value, Hypertext Transfer Protocol",80,null],[13,"Tls","","`TLS` value, Transport Layer Security [RFC2817](http://tools.ietf.org/html/rfc2817)",80,null],[13,"WebSocket","","`WebSocket` value, matched case insensitively,Web Socket Protocol\n[RFC6455](http://tools.ietf.org/html/rfc6455)",80,null],[13,"H2c","","`h2c` value, HTTP/2 over cleartext TCP",80,null],[13,"Unregistered","","Any other protocol name not known to hyper",80,null],[4,"Vary","","`Vary` header, defined in [RFC7231](https://tools.ietf.org/html/rfc7231#section-7.1.4)",null,null],[13,"Any","","Any value is a match",81,null],[13,"Items","","Only the listed items are a match",81,null],[4,"RelationType","","A Link Relation Type Enum based on:\n[RFC5988](https://tools.ietf.org/html/rfc5988#section-6.2.2)",null,null],[13,"Alternate","","alternate.",82,null],[13,"Appendix","","appendix.",82,null],[13,"Bookmark","","bookmark.",82,null],[13,"Chapter","","chapter.",82,null],[13,"Contents","","contents.",82,null],[13,"Copyright","","copyright.",82,null],[13,"Current","","current.",82,null],[13,"DescribedBy","","describedby.",82,null],[13,"Edit","","edit.",82,null],[13,"EditMedia","","edit-media.",82,null],[13,"Enclosure","","enclosure.",82,null],[13,"First","","first.",82,null],[13,"Glossary","","glossary.",82,null],[13,"Help","","help.",82,null],[13,"Hub","","hub.",82,null],[13,"Index","","index.",82,null],[13,"Last","","last.",82,null],[13,"LatestVersion","","latest-version.",82,null],[13,"License","","license.",82,null],[13,"Next","","next.",82,null],[13,"NextArchive","","next-archive.",82,null],[13,"Payment","","payment.",82,null],[13,"Prev","","prev.",82,null],[13,"PredecessorVersion","","predecessor-version.",82,null],[13,"Previous","","previous.",82,null],[13,"PrevArchive","","prev-archive.",82,null],[13,"Related","","related.",82,null],[13,"Replies","","replies.",82,null],[13,"Section","","section.",82,null],[13,"RelationTypeSelf","","self.",82,null],[13,"Service","","service.",82,null],[13,"Start","","start.",82,null],[13,"Stylesheet","","stylesheet.",82,null],[13,"Subsection","","subsection.",82,null],[13,"SuccessorVersion","","successor-version.",82,null],[13,"Up","","up.",82,null],[13,"VersionHistory","","versionHistory.",82,null],[13,"Via","","via.",82,null],[13,"WorkingCopy","","working-copy.",82,null],[13,"WorkingCopyOf","","working-copy-of.",82,null],[13,"ExtRelType","","ext-rel-type.",82,null],[4,"MediaDesc","","A Media Descriptors Enum based on:\nhttps://www.w3.org/TR/html401/types.html#h-6.13",null,null],[13,"Screen","","screen.",83,null],[13,"Tty","","tty.",83,null],[13,"Tv","","tv.",83,null],[13,"Projection","","projection.",83,null],[13,"Handheld","","handheld.",83,null],[13,"Print","","print.",83,null],[13,"Braille","","braille.",83,null],[13,"Aural","","aural.",83,null],[13,"All","","all.",83,null],[13,"Extension","","Unrecognized media descriptor extension.",83,null],[5,"qitem","","Convenience function to wrap a value in a `QualityItem`\nSets `q` to the default 1.0",null,{"inputs":[{"name":"t"}],"output":{"name":"qualityitem"}}],[5,"q","","Convenience function to create a `Quality` from a float.",null,{"inputs":[{"name":"f32"}],"output":{"name":"quality"}}],[11,"eq","","",21,null],[11,"ne","","",21,null],[11,"fmt","","",21,null],[11,"clone","","",21,null],[11,"new","collections::vec","Constructs a new, empty `Vec&lt;T&gt;`.",84,{"inputs":[],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec&lt;T&gt;` with the specified capacity.",84,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec&lt;T&gt;` directly from the raw components of another vector.",84,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",84,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec&lt;T&gt;`. The collection may reserve more space to avoid\nfrequent reallocations.",84,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec&lt;T&gt;`. Does nothing if the capacity is already\nsufficient.",84,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",84,null],[11,"into_boxed_slice","","Converts the vector into Box&lt;[T]&gt;.",84,null],[11,"truncate","","Shorten a vector to be `len` elements long, dropping excess elements.",84,null],[11,"as_slice","","Extracts a slice containing the entire vector.",84,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",84,null],[11,"set_len","","Sets the length of a vector.",84,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",84,null],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after it to the right.",84,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after it to the left.",84,null],[11,"retain","","Retains only the elements specified by the predicate.",84,null],[11,"push","","Appends an element to the back of a collection.",84,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",84,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",84,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items.",84,null],[11,"clear","","Clears the vector, removing all values.",84,null],[11,"len","","Returns the number of elements in the vector.",84,null],[11,"is_empty","","Returns `true` if the vector contains no elements.",84,null],[11,"split_off","","Splits the collection into two at the given index.",84,null],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",84,null],[11,"extend_from_slice","","Appends all elements in a slice to the `Vec`.",84,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",84,null],[11,"clone","collections::binary_heap","",85,null],[11,"clone_from","","",85,null],[11,"default","","",85,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"fmt","","",85,null],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",85,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",85,{"inputs":[{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",85,null],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",85,null],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",85,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",85,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",85,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",85,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",85,null],[11,"push","","Pushes an item onto the binary heap.",85,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",85,null],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",85,null],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",85,null],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",85,null],[11,"len","","Returns the length of the binary heap.",85,null],[11,"is_empty","","Checks if the binary heap is empty.",85,null],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",85,null],[11,"clear","","Drops all items from the binary heap.",85,null],[11,"append","","Moves all the elements of `other` into `self`, leaving `other` empty.",85,null],[11,"clone","","",86,null],[11,"next","","",86,null],[11,"size_hint","","",86,null],[11,"next_back","","",86,null],[11,"clone","","",87,null],[11,"next","","",87,null],[11,"size_hint","","",87,null],[11,"next_back","","",87,null],[11,"next","","",88,null],[11,"size_hint","","",88,null],[11,"next_back","","",88,null],[11,"from","","",85,{"inputs":[{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",84,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",85,{"inputs":[{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",85,null],[11,"extend","","",85,null],[11,"extend","","",85,null],[11,"drop","collections::btree::map","",89,null],[11,"clone","","",89,null],[11,"new","","Makes a new empty BTreeMap with a reasonable choice for B.",89,{"inputs":[],"output":{"name":"btreemap"}}],[11,"clear","","Clears the map, removing all values.",89,null],[11,"get","","Returns a reference to the value corresponding to the key.",89,null],[11,"contains_key","","Returns true if the map contains a value for the specified key.",89,null],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",89,null],[11,"insert","","Inserts a key-value pair into the map.",89,null],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",89,null],[11,"append","","Moves all elements from `other` into `Self`, leaving `other` empty.",89,null],[11,"range","","Constructs a double-ended iterator over a sub-range of elements in the map, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as &quot;negative\ninfinity&quot;, and if max is `Unbounded`, then it will be treated as &quot;positive infinity&quot;.\nThus range(Unbounded, Unbounded) will yield the whole collection.",89,null],[11,"range_mut","","Constructs a mutable double-ended iterator over a sub-range of elements in the map, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as &quot;negative\ninfinity&quot;, and if max is `Unbounded`, then it will be treated as &quot;positive infinity&quot;.\nThus range(Unbounded, Unbounded) will yield the whole collection.",89,null],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",89,null],[11,"next","","",90,null],[11,"size_hint","","",90,null],[11,"next_back","","",90,null],[11,"len","","",90,null],[11,"clone","","",90,null],[11,"next","","",91,null],[11,"size_hint","","",91,null],[11,"next_back","","",91,null],[11,"len","","",91,null],[11,"into_iter","","",89,null],[11,"drop","","",92,null],[11,"next","","",92,null],[11,"size_hint","","",92,null],[11,"next_back","","",92,null],[11,"len","","",92,null],[11,"next","","",93,null],[11,"size_hint","","",93,null],[11,"next_back","","",93,null],[11,"len","","",93,null],[11,"clone","","",93,null],[11,"next","","",94,null],[11,"size_hint","","",94,null],[11,"next_back","","",94,null],[11,"len","","",94,null],[11,"clone","","",94,null],[11,"next","","",95,null],[11,"next","","",96,null],[11,"size_hint","","",96,null],[11,"next_back","","",96,null],[11,"len","","",96,null],[11,"next_back","","",95,null],[11,"clone","","",95,null],[11,"next","","",97,null],[11,"next_back","","",97,null],[11,"from_iter","","",89,{"inputs":[{"name":"t"}],"output":{"name":"btreemap"}}],[11,"extend","","",89,null],[11,"extend","","",89,null],[11,"hash","","",89,null],[11,"default","","",89,{"inputs":[],"output":{"name":"btreemap"}}],[11,"eq","","",89,null],[11,"partial_cmp","","",89,null],[11,"cmp","","",89,null],[11,"fmt","","",89,null],[11,"index","","",89,null],[11,"iter","","Gets an iterator over the entries of the map, sorted by key.",89,null],[11,"iter_mut","","Gets a mutable iterator over the entries of the map, sorted by key.",89,null],[11,"keys","","Gets an iterator over the keys of the map, in sorted order.",89,null],[11,"values","","Gets an iterator over the values of the map, in order by key.",89,null],[11,"values_mut","","Gets a mutable iterator over the values of the map, in order by key.",89,null],[11,"len","","Returns the number of elements in the map.",89,null],[11,"is_empty","","Returns true if the map contains no elements.",89,null],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",98,null],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",98,null],[11,"key","","Returns a reference to this entry&#39;s key.",98,null],[11,"key","","Gets a reference to the key that would be used when inserting a value\nthrough the VacantEntry.",99,null],[11,"insert","","Sets the value of the entry with the VacantEntry&#39;s key,\nand returns a mutable reference to it.",99,null],[11,"key","","Gets a reference to the key in the entry.",100,null],[11,"get","","Gets a reference to the value in the entry.",100,null],[11,"get_mut","","Gets a mutable reference to the value in the entry.",100,null],[11,"into_mut","","Converts the entry into a mutable reference to its value.",100,null],[11,"insert","","Sets the value of the entry with the OccupiedEntry&#39;s key,\nand returns the entry&#39;s old value.",100,null],[11,"remove","","Takes the value of the entry out of the map, and returns it.",100,null],[11,"partial_cmp","collections::btree::set","",101,null],[11,"lt","","",101,null],[11,"le","","",101,null],[11,"gt","","",101,null],[11,"ge","","",101,null],[11,"cmp","","",101,null],[11,"eq","","",101,null],[11,"ne","","",101,null],[11,"hash","","",101,null],[11,"clone","","",101,null],[11,"new","","Makes a new BTreeSet with a reasonable choice of B.",101,{"inputs":[],"output":{"name":"btreeset"}}],[11,"iter","","Gets an iterator over the BTreeSet&#39;s contents.",101,null],[11,"range","","Constructs a double-ended iterator over a sub-range of elements in the set, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as &quot;negative\ninfinity&quot;, and if max is `Unbounded`, then it will be treated as &quot;positive infinity&quot;.\nThus range(Unbounded, Unbounded) will yield the whole collection.",101,null],[11,"difference","","Visits the values representing the difference, in ascending order.",101,null],[11,"symmetric_difference","","Visits the values representing the symmetric difference, in ascending order.",101,null],[11,"intersection","","Visits the values representing the intersection, in ascending order.",101,null],[11,"union","","Visits the values representing the union, in ascending order.",101,null],[11,"len","","Returns the number of elements in the set.",101,null],[11,"is_empty","","Returns true if the set contains no elements.",101,null],[11,"clear","","Clears the set, removing all values.",101,null],[11,"contains","","Returns `true` if the set contains a value.",101,null],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",101,null],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",101,null],[11,"is_subset","","Returns `true` if the set is a subset of another.",101,null],[11,"is_superset","","Returns `true` if the set is a superset of another.",101,null],[11,"insert","","Adds a value to the set.",101,null],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",101,null],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",101,null],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",101,null],[11,"append","","Moves all elements from `other` into `Self`, leaving `other` empty.",101,null],[11,"from_iter","","",101,{"inputs":[{"name":"i"}],"output":{"name":"btreeset"}}],[11,"into_iter","","Gets an iterator for moving out the BtreeSet&#39;s contents.",101,null],[11,"extend","","",101,null],[11,"extend","","",101,null],[11,"default","","",101,{"inputs":[],"output":{"name":"btreeset"}}],[11,"fmt","","",101,null],[11,"clone","","",102,null],[11,"next","","",102,null],[11,"size_hint","","",102,null],[11,"next_back","","",102,null],[11,"len","","",102,null],[11,"next","","",103,null],[11,"size_hint","","",103,null],[11,"next_back","","",103,null],[11,"len","","",103,null],[11,"clone","","",104,null],[11,"next","","",104,null],[11,"next_back","","",104,null],[11,"clone","","",105,null],[11,"next","","",105,null],[11,"size_hint","","",105,null],[11,"clone","","",106,null],[11,"next","","",106,null],[11,"size_hint","","",106,null],[11,"clone","","",107,null],[11,"next","","",107,null],[11,"size_hint","","",107,null],[11,"clone","","",108,null],[11,"next","","",108,null],[11,"size_hint","","",108,null],[11,"borrow","collections::borrow","",109,null],[11,"clone","","",109,null],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",109,null],[11,"into_owned","","Extracts the owned data.",109,null],[11,"deref","","",109,null],[11,"cmp","","",109,null],[11,"eq","","",109,null],[11,"partial_cmp","","",109,null],[11,"fmt","","",109,null],[11,"fmt","","",109,null],[11,"hash","","",109,null],[11,"as_ref","","",109,null],[11,"hash","collections::enum_set","",110,null],[11,"cmp","","",110,null],[11,"partial_cmp","","",110,null],[11,"lt","","",110,null],[11,"le","","",110,null],[11,"gt","","",110,null],[11,"ge","","",110,null],[11,"eq","","",110,null],[11,"ne","","",110,null],[11,"clone","","",110,null],[11,"fmt","","",110,null],[11,"new","","Returns an empty `EnumSet`.",110,{"inputs":[],"output":{"name":"enumset"}}],[11,"len","","Returns the number of elements in the given `EnumSet`.",110,null],[11,"is_empty","","Returns true if the `EnumSet` is empty.",110,null],[11,"clear","","",110,null],[11,"is_disjoint","","Returns `false` if the `EnumSet` contains any enum of the given `EnumSet`.",110,null],[11,"is_superset","","Returns `true` if a given `EnumSet` is included in this `EnumSet`.",110,null],[11,"is_subset","","Returns `true` if this `EnumSet` is included in the given `EnumSet`.",110,null],[11,"union","","Returns the union of both `EnumSets`.",110,null],[11,"intersection","","Returns the intersection of both `EnumSets`.",110,null],[11,"insert","","Adds an enum to the `EnumSet`, and returns `true` if it wasn&#39;t there before",110,null],[11,"remove","","Removes an enum from the EnumSet",110,null],[11,"contains","","Returns `true` if an `EnumSet` contains a given enum.",110,null],[11,"iter","","Returns an iterator over an `EnumSet`.",110,null],[11,"sub","","",110,null],[11,"bitor","","",110,null],[11,"bitand","","",110,null],[11,"bitxor","","",110,null],[11,"clone","","",111,null],[11,"next","","",111,null],[11,"size_hint","","",111,null],[11,"from_iter","","",110,{"inputs":[{"name":"i"}],"output":{"name":"enumset"}}],[11,"extend","","",110,null],[11,"extend","","",110,null],[11,"clone","collections::linked_list","",112,null],[11,"clone","","",113,null],[11,"default","","",114,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",114,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",114,null],[11,"iter","","Provides a forward iterator.",114,null],[11,"iter_mut","","Provides a forward iterator with mutable references.",114,null],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",114,null],[11,"len","","Returns the length of the `LinkedList`.",114,null],[11,"clear","","Removes all elements from the `LinkedList`.",114,null],[11,"contains","","Returns `true` if the `LinkedList` contains an element equal to the\ngiven value.",114,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",114,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",114,null],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",114,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",114,null],[11,"push_front","","Adds an element first in the list.",114,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",114,null],[11,"push_back","","Appends an element to the back of a list",114,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",114,null],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",114,null],[11,"front_place","","Returns a place for insertion at the front of the list.",114,null],[11,"back_place","","Returns a place for insertion at the back of the list.",114,null],[11,"drop","","",114,null],[11,"next","","",112,null],[11,"size_hint","","",112,null],[11,"next_back","","",112,null],[11,"next","","",115,null],[11,"size_hint","","",115,null],[11,"next_back","","",115,null],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",115,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",115,null],[11,"next","","",113,null],[11,"size_hint","","",113,null],[11,"next_back","","",113,null],[11,"from_iter","","",114,{"inputs":[{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",114,null],[11,"extend","","",114,null],[11,"extend","","",114,null],[11,"eq","","",114,null],[11,"ne","","",114,null],[11,"partial_cmp","","",114,null],[11,"cmp","","",114,null],[11,"clone","","",114,null],[11,"fmt","","",114,null],[11,"hash","","",114,null],[11,"make_place","","",116,null],[11,"pointer","","",116,null],[11,"finalize","","",116,null],[11,"make_place","","",117,null],[11,"pointer","","",117,null],[11,"finalize","","",117,null],[11,"start","core::ops","",118,null],[11,"end","","",119,null],[11,"start","","",120,null],[11,"end","","",120,null],[11,"borrow","collections::vec","",84,null],[11,"borrow_mut","","",84,null],[11,"clone","collections::str","",121,null],[11,"next","","",121,null],[11,"size_hint","","",121,null],[11,"borrow","collections::string","",122,null],[11,"fmt","core::str::pattern","",123,null],[11,"eq","","",123,null],[11,"ne","","",123,null],[11,"clone","","",123,null],[11,"fmt","","",124,null],[11,"clone","","",124,null],[11,"haystack","","",124,null],[11,"next","","",124,null],[11,"next_match","","",124,null],[11,"next_reject","","",124,null],[11,"next_back","","",124,null],[11,"next_match_back","","",124,null],[11,"next_reject_back","","",124,null],[11,"fmt","","",125,null],[11,"clone","","",125,null],[11,"haystack","","",125,null],[11,"next","","",125,null],[11,"next_match","","",125,null],[11,"next_reject","","",125,null],[11,"next_back","","",125,null],[11,"next_match_back","","",125,null],[11,"next_reject_back","","",125,null],[11,"clone","","",126,null],[11,"fmt","","",126,null],[11,"haystack","","",126,null],[11,"next","","",126,null],[11,"next_match","","",126,null],[11,"next_reject","","",126,null],[11,"next_back","","",126,null],[11,"next_match_back","","",126,null],[11,"next_reject_back","","",126,null],[11,"fmt","","",127,null],[11,"clone","","",127,null],[11,"haystack","","",127,null],[11,"next","","",127,null],[11,"next_match","","",127,null],[11,"next_back","","",127,null],[11,"next_match_back","","",127,null],[11,"cmp","collections::string","",122,null],[11,"partial_cmp","","",122,null],[11,"lt","","",122,null],[11,"le","","",122,null],[11,"gt","","",122,null],[11,"ge","","",122,null],[11,"fmt","","",128,null],[11,"fmt","","",129,null],[11,"new","","Creates a new empty `String`.",122,{"inputs":[],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new empty `String` with a particular capacity.",122,{"inputs":[{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",122,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid characters.",122,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `Err`\nif `v` contains any invalid data.",122,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",122,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",122,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",122,{"inputs":[{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Converts a `String` into a byte vector.",122,null],[11,"as_str","","Extracts a string slice containing the entire string.",122,null],[11,"as_mut_str","","Extracts a string slice containing the entire string.",122,null],[11,"push_str","","Appends a given string slice onto the end of this `String`.",122,null],[11,"capacity","","Returns this `String`&#39;s capacity, in bytes.",122,null],[11,"reserve","","Ensures that this `String`&#39;s capacity is at least `additional` bytes\nlarger than its length.",122,null],[11,"reserve_exact","","Ensures that this `String`&#39;s capacity is `additional` bytes\nlarger than its length.",122,null],[11,"shrink_to_fit","","Shrinks the capacity of this `String` to match its length.",122,null],[11,"push","","Appends the given `char` to the end of this `String`.",122,null],[11,"as_bytes","","Returns a byte slice of this `String`&#39;s contents.",122,null],[11,"truncate","","Shortens this `String` to the specified length.",122,null],[11,"pop","","Removes the last character from the string buffer and returns it.",122,null],[11,"remove","","Removes a `char` from this `String` at a byte position and returns it.",122,null],[11,"insert","","Inserts a character into this `String` at a byte position.",122,null],[11,"as_mut_vec","","Returns a mutable reference to the contents of this `String`.",122,null],[11,"len","","Returns the length of this `String`, in bytes.",122,null],[11,"is_empty","","Returns `true` if this `String` has a length of zero.",122,null],[11,"clear","","Truncates this `String`, removing all contents.",122,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars.",122,null],[11,"into_boxed_str","","Converts this `String` into a `Box&lt;str&gt;`.",122,null],[11,"into_bytes","","Returns the bytes that were attempted to convert to a `String`.",128,null],[11,"utf8_error","","Fetch a `Utf8Error` to get more details about the conversion failure.",128,null],[11,"fmt","","",128,null],[11,"fmt","","",129,null],[11,"clone","","",122,null],[11,"clone_from","","",122,null],[11,"from_iter","","",122,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",122,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",122,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",122,null],[11,"extend","","",122,null],[11,"extend","","",122,null],[11,"extend","","",122,null],[11,"eq","","",122,null],[11,"ne","","",122,null],[11,"eq","","",122,null],[11,"ne","","",122,null],[11,"eq","","",122,null],[11,"ne","","",122,null],[11,"eq","collections::borrow","",109,null],[11,"ne","","",109,null],[11,"eq","","",109,null],[11,"ne","","",109,null],[11,"eq","","",109,null],[11,"ne","","",109,null],[11,"eq","collections::string","",122,null],[11,"ne","","",122,null],[11,"default","","",122,{"inputs":[],"output":{"name":"string"}}],[11,"fmt","","",122,null],[11,"fmt","","",122,null],[11,"hash","","",122,null],[11,"add","","",122,null],[11,"index","","",122,null],[11,"index","","",122,null],[11,"index","","",122,null],[11,"index","","",122,null],[11,"index","","",122,null],[11,"index","","",122,null],[11,"index_mut","","",122,null],[11,"index_mut","","",122,null],[11,"index_mut","","",122,null],[11,"index_mut","","",122,null],[11,"index_mut","","",122,null],[11,"index_mut","","",122,null],[11,"deref","","",122,null],[11,"deref_mut","","",122,null],[11,"from_str","","",122,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",130,null],[11,"fmt","","",130,null],[11,"fmt","","",130,null],[11,"eq","","",130,null],[11,"as_ref","","",122,null],[11,"as_ref","","",122,null],[11,"from","","",122,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",109,{"inputs":[{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",109,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",122,null],[11,"write_str","","",122,null],[11,"write_char","","",122,null],[11,"drop","","",131,null],[11,"next","","",131,null],[11,"size_hint","","",131,null],[11,"next_back","","",131,null],[11,"clone","collections::vec","",84,null],[11,"clone_from","","",84,null],[11,"hash","","",84,null],[11,"index","","",84,null],[11,"index_mut","","",84,null],[11,"index","","",84,null],[11,"index","","",84,null],[11,"index","","",84,null],[11,"index","","",84,null],[11,"index","","",84,null],[11,"index","","",84,null],[11,"index_mut","","",84,null],[11,"index_mut","","",84,null],[11,"index_mut","","",84,null],[11,"index_mut","","",84,null],[11,"index_mut","","",84,null],[11,"index_mut","","",84,null],[11,"deref","","",84,null],[11,"deref_mut","","",84,null],[11,"from_iter","","",84,{"inputs":[{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",84,null],[11,"extend","","",84,null],[11,"extend","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","collections::borrow","",109,null],[11,"ne","","",109,null],[11,"eq","","",109,null],[11,"ne","","",109,null],[11,"eq","","",109,null],[11,"ne","","",109,null],[11,"eq","collections::vec","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"partial_cmp","","",84,null],[11,"cmp","","",84,null],[11,"drop","","",84,null],[11,"default","","",84,{"inputs":[],"output":{"name":"vec"}}],[11,"fmt","","",84,null],[11,"as_ref","","",84,null],[11,"as_mut","","",84,null],[11,"as_ref","","",84,null],[11,"as_mut","","",84,null],[11,"from","","",84,null],[11,"from","","",84,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[11,"from","collections::borrow","",109,null],[11,"from","","",109,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"from_iter","","",109,{"inputs":[{"name":"i"}],"output":{"name":"cow"}}],[11,"next","collections::vec","",132,null],[11,"size_hint","","",132,null],[11,"count","","",132,null],[11,"next_back","","",132,null],[11,"clone","","",132,null],[11,"drop","","",132,null],[11,"next","","",133,null],[11,"size_hint","","",133,null],[11,"next_back","","",133,null],[11,"drop","","",133,null],[11,"clone","collections::vec_deque","",134,null],[11,"drop","","",134,null],[11,"default","","",134,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",134,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",134,{"inputs":[{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",134,null],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",134,null],[11,"swap","","Swaps elements at indices `i` and `j`.",134,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",134,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",134,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",134,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",134,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",134,null],[11,"iter","","Returns a front-to-back iterator.",134,null],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",134,null],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",134,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",134,null],[11,"len","","Returns the number of elements in the `VecDeque`.",134,null],[11,"is_empty","","Returns true if the buffer contains no elements",134,null],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items.",134,null],[11,"clear","","Clears the buffer, removing all values.",134,null],[11,"contains","","Returns `true` if the `VecDeque` contains an element equal to the\ngiven value.",134,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",134,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",134,null],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",134,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",134,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",134,null],[11,"push_front","","Inserts an element first in the sequence.",134,null],[11,"push_back","","Appends an element to the back of a buffer",134,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",134,null],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",134,null],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",134,null],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",134,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",134,null],[11,"split_off","","Splits the collection into two at the given index.",134,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",134,null],[11,"retain","","Retains only the elements specified by the predicate.",134,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",134,null],[11,"clone","","",135,null],[11,"next","","",135,null],[11,"size_hint","","",135,null],[11,"next_back","","",135,null],[11,"next","","",136,null],[11,"size_hint","","",136,null],[11,"next_back","","",136,null],[11,"clone","","",137,null],[11,"next","","",137,null],[11,"size_hint","","",137,null],[11,"next_back","","",137,null],[11,"drop","","",138,null],[11,"next","","",138,null],[11,"size_hint","","",138,null],[11,"next_back","","",138,null],[11,"eq","","",134,null],[11,"partial_cmp","","",134,null],[11,"cmp","","",134,null],[11,"hash","","",134,null],[11,"index","","",134,null],[11,"index_mut","","",134,null],[11,"from_iter","","",134,{"inputs":[{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",134,null],[11,"extend","","",134,null],[11,"extend","","",134,null],[11,"fmt","","",134,null],[11,"from","","",134,{"inputs":[{"name":"vec"}],"output":{"name":"vecdeque"}}],[11,"from","collections::vec","",84,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vec"}}],[11,"eq","collections","",139,null],[11,"ne","","",139,null],[11,"hash","","",139,null],[11,"fmt","","",139,null],[11,"clone","","",139,null],[11,"clone","alloc::boxed","",140,null],[11,"pointer","","",141,null],[11,"make_place","","",141,{"inputs":[],"output":{"name":"intermediatebox"}}],[11,"finalize","","",141,null],[11,"finalize","","",4,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",140,null],[11,"drop","","",141,null],[11,"new","","Allocates memory on the heap and then places `x` into it.",4,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from a raw pointer.",4,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",4,null],[11,"default","","",4,{"inputs":[],"output":{"name":"box"}}],[11,"default","","",4,{"inputs":[],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box&#39;s contents.",4,null],[11,"clone_from","","Copies `source`&#39;s contents into `self` without creating a new allocation.",4,null],[11,"clone","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"partial_cmp","","",4,null],[11,"lt","","",4,null],[11,"le","","",4,null],[11,"ge","","",4,null],[11,"gt","","",4,null],[11,"cmp","","",4,null],[11,"hash","","",4,null],[11,"from","","",4,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",4,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",4,null],[11,"fmt","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",4,null],[11,"deref","","",4,null],[11,"deref_mut","","",4,null],[11,"next","","",4,null],[11,"size_hint","","",4,null],[11,"next_back","","",4,null],[11,"call_once","","",4,null],[11,"call_once","","",4,null],[11,"clone","","",4,null],[11,"borrow","","",4,null],[11,"borrow_mut","","",4,null],[11,"as_ref","","",4,null],[11,"as_mut","","",4,null],[11,"deref","hyper::header","",21,null],[11,"deref_mut","","",21,null],[11,"header_name","","",21,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",21,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",21,null],[11,"fmt","","",21,null],[11,"star","","A constructor to easily create `Accept: */*`.",21,{"inputs":[],"output":{"name":"accept"}}],[11,"json","","A constructor to easily create `Accept: application/json`.",21,{"inputs":[],"output":{"name":"accept"}}],[11,"text","","A constructor to easily create `Accept: text/*`.",21,{"inputs":[],"output":{"name":"accept"}}],[11,"image","","A constructor to easily create `Accept: image/*`.",21,{"inputs":[],"output":{"name":"accept"}}],[11,"fmt","","",142,null],[11,"eq","","",142,null],[11,"clone","","",142,null],[11,"header_name","","",142,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",142,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",142,null],[11,"fmt","","",142,null],[11,"eq","","",22,null],[11,"ne","","",22,null],[11,"fmt","","",22,null],[11,"clone","","",22,null],[11,"deref","","",22,null],[11,"deref_mut","","",22,null],[11,"header_name","","",22,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",22,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",22,null],[11,"fmt","","",22,null],[11,"eq","","",23,null],[11,"ne","","",23,null],[11,"fmt","","",23,null],[11,"clone","","",23,null],[11,"deref","","",23,null],[11,"deref_mut","","",23,null],[11,"header_name","","",23,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",23,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",23,null],[11,"fmt","","",23,null],[11,"fmt","","",63,null],[11,"eq","","",63,null],[11,"ne","","",63,null],[11,"clone","","",63,null],[11,"header_name","","",63,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",63,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",63,null],[11,"fmt","","",63,null],[11,"eq","","",24,null],[11,"ne","","",24,null],[11,"fmt","","",24,null],[11,"clone","","",24,null],[11,"deref","","",24,null],[11,"deref_mut","","",24,null],[11,"header_name","","",24,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",24,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",24,null],[11,"fmt","","",24,null],[11,"eq","","",25,null],[11,"ne","","",25,null],[11,"fmt","","",25,null],[11,"clone","","",25,null],[11,"deref","","",25,null],[11,"deref_mut","","",25,null],[11,"header_name","","",25,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",25,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",25,null],[11,"fmt","","",25,null],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"fmt","","",26,null],[11,"clone","","",26,null],[11,"deref","","",26,null],[11,"deref_mut","","",26,null],[11,"header_name","","",26,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",26,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",26,null],[11,"fmt","","",26,null],[11,"eq","","",27,null],[11,"ne","","",27,null],[11,"fmt","","",27,null],[11,"clone","","",27,null],[11,"deref","","",27,null],[11,"deref_mut","","",27,null],[11,"header_name","","",27,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",27,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",27,null],[11,"fmt","","",27,null],[11,"eq","","",28,null],[11,"ne","","",28,null],[11,"fmt","","",28,null],[11,"clone","","",28,null],[11,"deref","","",28,null],[11,"deref_mut","","",28,null],[11,"header_name","","",28,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",28,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",28,null],[11,"fmt","","",28,null],[11,"eq","","",29,null],[11,"ne","","",29,null],[11,"fmt","","",29,null],[11,"clone","","",29,null],[11,"deref","","",29,null],[11,"deref_mut","","",29,null],[11,"header_name","","",29,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",29,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",29,null],[11,"fmt","","",29,null],[11,"eq","","",30,null],[11,"ne","","",30,null],[11,"fmt","","",30,null],[11,"clone","","",30,null],[11,"deref","","",30,null],[11,"deref_mut","","",30,null],[11,"header_name","","",30,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",30,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",30,null],[11,"fmt","","",30,null],[11,"eq","","",31,null],[11,"ne","","",31,null],[11,"fmt","","",31,null],[11,"clone","","",31,null],[11,"deref","","",31,null],[11,"deref_mut","","",31,null],[11,"header_name","","",31,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",31,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",31,null],[11,"fmt","","",31,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"fmt","","",64,null],[11,"clone","","",64,null],[11,"from_str","","",64,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",64,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"fmt","","",32,null],[11,"clone","","",32,null],[11,"deref","","",32,null],[11,"deref_mut","","",32,null],[11,"header_name","","",32,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",32,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",32,null],[11,"fmt","","",32,null],[11,"fmt","","",33,null],[11,"eq","","",33,null],[11,"ne","","",33,null],[11,"clone","","",33,null],[11,"deref","","",33,null],[11,"deref_mut","","",33,null],[11,"header_name","","",33,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",33,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",33,null],[11,"fmt","","",33,null],[11,"scheme","collections::string","",122,{"inputs":[],"output":{"name":"option"}}],[11,"fmt_scheme","","",122,null],[11,"fmt","hyper::header","",34,null],[11,"eq","","",34,null],[11,"ne","","",34,null],[11,"clone","","",34,null],[11,"scheme","","",34,{"inputs":[],"output":{"name":"option"}}],[11,"fmt_scheme","","",34,null],[11,"from_str","","",34,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",35,null],[11,"eq","","",35,null],[11,"ne","","",35,null],[11,"clone","","",35,null],[11,"scheme","","",35,{"inputs":[],"output":{"name":"option"}}],[11,"fmt_scheme","","",35,null],[11,"from_str","","",35,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",36,null],[11,"clone","","",36,null],[11,"eq","","",36,null],[11,"ne","","",36,null],[11,"deref","","",36,null],[11,"deref_mut","","",36,null],[11,"header_name","","",36,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",36,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",36,null],[11,"fmt","","",36,null],[11,"fmt","","",65,null],[11,"clone","","",65,null],[11,"eq","","",65,null],[11,"ne","","",65,null],[11,"fmt","","",65,null],[11,"from_str","","",65,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",45,null],[11,"eq","","",45,null],[11,"ne","","",45,null],[11,"clone","","",45,null],[11,"deref","","",45,null],[11,"deref_mut","","",45,null],[11,"header_name","","",45,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",45,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",45,null],[11,"fmt","","",45,null],[11,"fmt","","",66,null],[11,"eq","","",66,null],[11,"ne","","",66,null],[11,"clone","","",66,null],[11,"from_str","","",66,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",66,null],[11,"eq","","",37,null],[11,"ne","","",37,null],[11,"fmt","","",37,null],[11,"clone","","",37,null],[11,"deref","","",37,null],[11,"deref_mut","","",37,null],[11,"header_name","","",37,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",37,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",37,null],[11,"fmt","","",37,null],[11,"close","","A constructor to easily create a `Connection: close` header.",37,{"inputs":[],"output":{"name":"connection"}}],[11,"keep_alive","","A constructor to easily create a `Connection: keep-alive` header.",37,{"inputs":[],"output":{"name":"connection"}}],[11,"eq","","",67,null],[11,"ne","","",67,null],[11,"fmt","","",67,null],[11,"clone","","",67,null],[11,"eq","","",68,null],[11,"ne","","",68,null],[11,"fmt","","",68,null],[11,"clone","","",68,null],[11,"eq","","",38,null],[11,"ne","","",38,null],[11,"fmt","","",38,null],[11,"clone","","",38,null],[11,"header_name","","",38,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",38,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",38,null],[11,"fmt","","",38,null],[11,"eq","","",40,null],[11,"ne","","",40,null],[11,"fmt","","",40,null],[11,"clone","","",40,null],[11,"deref","","",40,null],[11,"deref_mut","","",40,null],[11,"header_name","","",40,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",40,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",40,null],[11,"fmt","","",40,null],[11,"eq","","",41,null],[11,"ne","","",41,null],[11,"fmt","","",41,null],[11,"clone","","",41,null],[11,"deref","","",41,null],[11,"deref_mut","","",41,null],[11,"header_name","","",41,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",41,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",41,null],[11,"fmt","","",41,null],[11,"eq","","",39,null],[11,"ne","","",39,null],[11,"fmt","","",39,null],[11,"clone","","",39,null],[11,"header_name","","",39,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",39,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",39,null],[11,"fmt","","",39,null],[11,"deref","","",39,null],[11,"deref_mut","","",39,null],[11,"eq","","",42,null],[11,"ne","","",42,null],[11,"fmt","","",42,null],[11,"clone","","",42,null],[11,"deref","","",42,null],[11,"deref_mut","","",42,null],[11,"header_name","","",42,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",42,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",42,null],[11,"fmt","","",42,null],[11,"eq","","",43,null],[11,"ne","","",43,null],[11,"fmt","","",43,null],[11,"clone","","",43,null],[11,"deref","","",43,null],[11,"deref_mut","","",43,null],[11,"header_name","","",43,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",43,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",43,null],[11,"fmt","","",43,null],[11,"fmt","","",69,null],[11,"clone","","",69,null],[11,"eq","","",69,null],[11,"ne","","",69,null],[11,"from_str","","",69,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",69,null],[11,"eq","","",44,null],[11,"ne","","",44,null],[11,"fmt","","",44,null],[11,"clone","","",44,null],[11,"get_param","mime","",143,null],[11,"partial_cmp","","",143,null],[11,"lt","","",143,null],[11,"le","","",143,null],[11,"gt","","",143,null],[11,"ge","","",143,null],[11,"cmp","","",143,null],[11,"hash","","",143,null],[11,"fmt","","",143,null],[11,"clone","","",143,null],[11,"eq","","",143,null],[11,"partial_cmp","","",144,null],[11,"lt","","",144,null],[11,"le","","",144,null],[11,"gt","","",144,null],[11,"ge","","",144,null],[11,"cmp","","",144,null],[11,"hash","","",144,null],[11,"fmt","","",144,null],[11,"clone","","",144,null],[11,"as_str","","",144,null],[11,"deref","","",144,null],[11,"eq","","",144,null],[11,"eq","","",144,null],[11,"eq","","",144,null],[11,"eq","","",144,null],[11,"eq","collections::string","",122,null],[11,"fmt","mime","",144,null],[11,"from_str","","",144,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"partial_cmp","","",145,null],[11,"lt","","",145,null],[11,"le","","",145,null],[11,"gt","","",145,null],[11,"ge","","",145,null],[11,"cmp","","",145,null],[11,"hash","","",145,null],[11,"fmt","","",145,null],[11,"clone","","",145,null],[11,"as_str","","",145,null],[11,"deref","","",145,null],[11,"eq","","",145,null],[11,"eq","","",145,null],[11,"eq","","",145,null],[11,"eq","","",145,null],[11,"eq","collections::string","",122,null],[11,"fmt","mime","",145,null],[11,"from_str","","",145,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"partial_cmp","","",146,null],[11,"lt","","",146,null],[11,"le","","",146,null],[11,"gt","","",146,null],[11,"ge","","",146,null],[11,"cmp","","",146,null],[11,"hash","","",146,null],[11,"fmt","","",146,null],[11,"clone","","",146,null],[11,"as_str","","",146,null],[11,"deref","","",146,null],[11,"eq","","",146,null],[11,"eq","","",146,null],[11,"eq","","",146,null],[11,"eq","","",146,null],[11,"eq","collections::string","",122,null],[11,"fmt","mime","",146,null],[11,"from_str","","",146,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"partial_cmp","","",147,null],[11,"lt","","",147,null],[11,"le","","",147,null],[11,"gt","","",147,null],[11,"ge","","",147,null],[11,"cmp","","",147,null],[11,"hash","","",147,null],[11,"fmt","","",147,null],[11,"clone","","",147,null],[11,"as_str","","",147,null],[11,"deref","","",147,null],[11,"eq","","",147,null],[11,"eq","","",147,null],[11,"eq","","",147,null],[11,"eq","","",147,null],[11,"eq","collections::string","",122,null],[11,"fmt","mime","",147,null],[11,"from_str","","",147,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",143,null],[11,"from_str","","",143,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"deref","hyper::header","",44,null],[11,"deref_mut","","",44,null],[11,"header_name","","",44,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",44,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",44,null],[11,"fmt","","",44,null],[11,"json","","A constructor  to easily create a `Content-Type: application/json` header.",44,{"inputs":[],"output":{"name":"contenttype"}}],[11,"plaintext","","A constructor  to easily create a `Content-Type: text/plain; charset=utf-8` header.",44,{"inputs":[],"output":{"name":"contenttype"}}],[11,"html","","A constructor  to easily create a `Content-Type: text/html; charset=utf-8` header.",44,{"inputs":[],"output":{"name":"contenttype"}}],[11,"form_url_encoded","","A constructor  to easily create a `Content-Type: application/www-form-url-encoded` header.",44,{"inputs":[],"output":{"name":"contenttype"}}],[11,"jpeg","","A constructor  to easily create a `Content-Type: image/jpeg` header.",44,{"inputs":[],"output":{"name":"contenttype"}}],[11,"png","","A constructor  to easily create a `Content-Type: image/png` header.",44,{"inputs":[],"output":{"name":"contenttype"}}],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"fmt","","",46,null],[11,"clone","","",46,null],[11,"deref","","",46,null],[11,"deref_mut","","",46,null],[11,"header_name","","",46,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",46,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",46,null],[11,"fmt","","",46,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"fmt","","",47,null],[11,"clone","","",47,null],[11,"deref","","",47,null],[11,"deref_mut","","",47,null],[11,"header_name","","",47,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",47,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",47,null],[11,"fmt","","",47,null],[11,"fmt","","",70,null],[11,"eq","","",70,null],[11,"clone","","",70,null],[11,"header_name","","",70,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",70,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",70,null],[11,"fmt","","",70,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"fmt","","",48,null],[11,"clone","","",48,null],[11,"deref","","",48,null],[11,"deref_mut","","",48,null],[11,"header_name","","",48,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",48,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",48,null],[11,"fmt","","",48,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"fmt","","",49,null],[11,"clone","","",49,null],[11,"deref","","",49,null],[11,"deref_mut","","",49,null],[11,"header_name","","",49,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",49,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",49,null],[11,"fmt","","",49,null],[11,"fmt","","",148,null],[11,"eq","","",148,null],[11,"ne","","",148,null],[11,"clone","","",148,null],[11,"new","","Create a `Host` header, providing the hostname and optional port.",148,{"inputs":[{"name":"h"},{"name":"p"}],"output":{"name":"host"}}],[11,"hostname","","Get the hostname, such as example.domain.",148,null],[11,"port","","Get the optional port number.",148,null],[11,"header_name","","",148,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",148,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",148,null],[11,"fmt","","",148,null],[11,"from_str","","",148,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",71,null],[11,"ne","","",71,null],[11,"fmt","","",71,null],[11,"clone","","",71,null],[11,"header_name","","",71,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",71,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",71,null],[11,"fmt","","",71,null],[11,"eq","","",50,null],[11,"ne","","",50,null],[11,"fmt","","",50,null],[11,"clone","","",50,null],[11,"deref","","",50,null],[11,"deref_mut","","",50,null],[11,"header_name","","",50,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",50,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",50,null],[11,"fmt","","",50,null],[11,"eq","","",72,null],[11,"ne","","",72,null],[11,"fmt","","",72,null],[11,"clone","","",72,null],[11,"header_name","","",72,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",72,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",72,null],[11,"fmt","","",72,null],[11,"eq","","",73,null],[11,"ne","","",73,null],[11,"fmt","","",73,null],[11,"clone","","",73,null],[11,"header_name","","",73,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",73,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",73,null],[11,"fmt","","",73,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"fmt","","",51,null],[11,"clone","","",51,null],[11,"deref","","",51,null],[11,"deref_mut","","",51,null],[11,"header_name","","",51,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",51,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",51,null],[11,"fmt","","",51,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"fmt","","",52,null],[11,"clone","","",52,null],[11,"deref","","",52,null],[11,"deref_mut","","",52,null],[11,"header_name","","",52,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",52,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",52,null],[11,"fmt","","",52,null],[11,"eq","","",149,null],[11,"ne","","",149,null],[11,"fmt","","",149,null],[11,"clone","","",149,null],[11,"new","","Creates a new $id",149,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"deref","","",149,null],[11,"header_name","","",149,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",149,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",149,null],[11,"fmt","","",149,null],[11,"fmt","","",150,null],[11,"clone","","",150,null],[11,"new","","Creates a new `Origin` header.",150,{"inputs":[{"name":"s"},{"name":"h"},{"name":"option"}],"output":{"name":"origin"}}],[11,"scheme","","The scheme, such as http or https\n```\nuse hyper::header::Origin;\nlet origin = Origin::new(&quot;https&quot;, &quot;foo.com&quot;, Some(443));\nassert_eq!(origin.scheme(), &quot;https&quot;);\n```",150,null],[11,"host","","The host, such as Host{hostname: &quot;hyper.rs&quot;.to_owned(), port: None}\n```\nuse hyper::header::{Origin,Host};\nlet origin = Origin::new(&quot;https&quot;, &quot;foo.com&quot;, Some(443));\nassert_eq!(origin.host(), &amp;Host::new(&quot;foo.com&quot;, Some(443)));\n```",150,null],[11,"header_name","","",150,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",150,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",150,null],[11,"from_str","","",150,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",150,null],[11,"eq","","",150,null],[11,"fmt","","",74,null],[11,"eq","","",74,null],[11,"ne","","",74,null],[11,"clone","","",74,null],[11,"header_name","","",74,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",74,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",74,null],[11,"fmt","","",74,null],[11,"fmt","","",53,null],[11,"clone","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"deref","","",53,null],[11,"deref_mut","","",53,null],[11,"header_name","","",53,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",53,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",53,null],[11,"fmt","","",53,null],[11,"fmt","","",75,null],[11,"clone","","",75,null],[11,"eq","","",75,null],[11,"ne","","",75,null],[11,"fmt","","",75,null],[11,"from_str","","",75,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",54,null],[11,"clone","","",54,null],[11,"eq","","",54,null],[11,"ne","","",54,null],[11,"deref","","",54,null],[11,"deref_mut","","",54,null],[11,"header_name","","",54,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",54,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",54,null],[11,"fmt","","",54,null],[11,"fmt","","",76,null],[11,"clone","","",76,null],[11,"eq","","",76,null],[11,"ne","","",76,null],[11,"fmt","","",77,null],[11,"clone","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"bytes","","Get the most common byte range header (&quot;bytes=from-to&quot;)",76,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"range"}}],[11,"bytes_multi","","Get byte range header with multiple subranges\n(&quot;bytes=from1-to1,from2-to2,fromX-toX&quot;)",76,{"inputs":[{"name":"vec"}],"output":{"name":"range"}}],[11,"fmt","","",77,null],[11,"fmt","","",76,null],[11,"from_str","","",76,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",77,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"header_name","","",76,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",76,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",76,null],[11,"eq","","",151,null],[11,"ne","","",151,null],[11,"fmt","","",151,null],[11,"clone","","",151,null],[11,"new","","Creates a new $id",151,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"deref","","",151,null],[11,"header_name","","",151,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",151,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",151,null],[11,"fmt","","",151,null],[11,"fmt","","",78,null],[11,"eq","","",78,null],[11,"clone","","",78,null],[11,"header_name","","",78,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",78,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",78,null],[11,"fmt","","",78,null],[11,"eq","","",79,null],[11,"ne","","",79,null],[11,"clone","","",79,null],[11,"fmt","","",79,null],[11,"header_name","","",79,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",79,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",79,null],[11,"eq","","",152,null],[11,"ne","","",152,null],[11,"fmt","","",152,null],[11,"clone","","",152,null],[11,"new","","Creates a new $id",152,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"deref","","",152,null],[11,"header_name","","",152,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",152,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",152,null],[11,"fmt","","",152,null],[11,"fmt","","",55,null],[11,"eq","","",55,null],[11,"ne","","",55,null],[11,"clone","","",55,null],[11,"deref","","",55,null],[11,"deref_mut","","",55,null],[11,"header_name","","",55,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",55,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",55,null],[11,"fmt_multi_header","","",55,null],[11,"fmt","","",56,null],[11,"eq","","",56,null],[11,"ne","","",56,null],[11,"clone","","",56,null],[11,"including_subdomains","","Create an STS header that includes subdomains",56,{"inputs":[{"name":"u64"}],"output":{"name":"stricttransportsecurity"}}],[11,"excluding_subdomains","","Create an STS header that excludes subdomains",56,{"inputs":[{"name":"u64"}],"output":{"name":"stricttransportsecurity"}}],[11,"from_str","","",56,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"header_name","","",56,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",56,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",56,null],[11,"fmt","","",56,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"fmt","","",57,null],[11,"clone","","",57,null],[11,"deref","","",57,null],[11,"deref_mut","","",57,null],[11,"header_name","","",57,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",57,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",57,null],[11,"fmt","","",57,null],[11,"chunked","","Constructor for the most common Transfer-Encoding, `chunked`.",57,{"inputs":[],"output":{"name":"transferencoding"}}],[11,"eq","","",58,null],[11,"ne","","",58,null],[11,"fmt","","",58,null],[11,"clone","","",58,null],[11,"deref","","",58,null],[11,"deref_mut","","",58,null],[11,"header_name","","",58,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",58,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",58,null],[11,"fmt","","",58,null],[11,"eq","","",80,null],[11,"ne","","",80,null],[11,"fmt","","",80,null],[11,"clone","","",80,null],[11,"from_str","","",80,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",80,null],[11,"eq","","",59,null],[11,"ne","","",59,null],[11,"fmt","","",59,null],[11,"clone","","",59,null],[11,"new","","Creates a new Protocol with the given name and version",59,{"inputs":[{"name":"protocolname"},{"name":"option"}],"output":{"name":"protocol"}}],[11,"from_str","","",59,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",59,null],[11,"eq","","",153,null],[11,"ne","","",153,null],[11,"fmt","","",153,null],[11,"clone","","",153,null],[11,"new","","Creates a new $id",153,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"deref","","",153,null],[11,"header_name","","",153,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",153,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",153,null],[11,"fmt","","",153,null],[11,"eq","","",81,null],[11,"ne","","",81,null],[11,"fmt","","",81,null],[11,"clone","","",81,null],[11,"header_name","","",81,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",81,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",81,null],[11,"fmt","","",81,null],[11,"fmt","","",60,null],[11,"clone","","",60,null],[11,"eq","","",60,null],[11,"ne","","",60,null],[11,"header_name","","",60,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",60,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",60,null],[11,"from_str","","",60,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",154,null],[11,"eq","","",154,null],[11,"ne","","",154,null],[11,"clone","","",154,null],[11,"fmt","","",155,null],[11,"eq","","",155,null],[11,"ne","","",155,null],[11,"clone","","",155,null],[11,"fmt","","",83,null],[11,"eq","","",83,null],[11,"ne","","",83,null],[11,"clone","","",83,null],[11,"fmt","","",82,null],[11,"eq","","",82,null],[11,"ne","","",82,null],[11,"clone","","",82,null],[11,"new","","Create `Link` from a `Vec&lt;LinkValue&gt;`.",154,{"inputs":[{"name":"vec"}],"output":{"name":"link"}}],[11,"values","","Get the `Link` header&#39;s `LinkValue`s.",154,null],[11,"push_value","","Add a `LinkValue` instance to the `Link` header&#39;s values.",154,null],[11,"new","","Create `LinkValue` from URI-Reference.",155,{"inputs":[{"name":"t"}],"output":{"name":"linkvalue"}}],[11,"link","","Get the `LinkValue`&#39;s value.",155,null],[11,"rel","","Get the `LinkValue`&#39;s `rel` parameter(s).",155,null],[11,"anchor","","Get the `LinkValue`&#39;s `anchor` parameter.",155,null],[11,"rev","","Get the `LinkValue`&#39;s `rev` parameter(s).",155,null],[11,"href_lang","","Get the `LinkValue`&#39;s `hreflang` parameter(s).",155,null],[11,"media_desc","","Get the `LinkValue`&#39;s `media` parameter(s).",155,null],[11,"title","","Get the `LinkValue`&#39;s `title` parameter.",155,null],[11,"title_star","","Get the `LinkValue`&#39;s `title*` parameter.",155,null],[11,"media_type","","Get the `LinkValue`&#39;s `type` parameter.",155,null],[11,"link_extension","","Get the `LinkValue`&#39;s `link-extension` parameter.",155,null],[11,"push_rel","","Add a `RelationType` to the `LinkValue`&#39;s `rel` parameter.",155,null],[11,"set_anchor","","Set `LinkValue`&#39;s `anchor` parameter.",155,null],[11,"push_rev","","Add a `RelationType` to the `LinkValue`&#39;s `rev` parameter.",155,null],[11,"push_href_lang","","Add a `LanguageTag` to the `LinkValue`&#39;s `hreflang` parameter.",155,null],[11,"push_media_desc","","Add a `MediaDesc` to the `LinkValue`&#39;s `media_desc` parameter.",155,null],[11,"set_title","","Set `LinkValue`&#39;s `title` parameter.",155,null],[11,"set_title_star","","Set `LinkValue`&#39;s `title*` parameter.",155,null],[11,"set_media_type","","Set `LinkValue`&#39;s `type` parameter.",155,null],[11,"set_link_extension","","Set `LinkValue`&#39;s `link-extension` parameter.",155,null],[11,"header_name","","",154,{"inputs":[],"output":{"name":"str"}}],[11,"parse_header","","",154,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[11,"fmt_header","","",154,null],[11,"fmt","","",154,null],[11,"fmt","","",155,null],[11,"from_str","","",154,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",83,null],[11,"from_str","","",83,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",82,null],[11,"from_str","","",82,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",156,null],[11,"is_none","","Returns `true` if the option is a `None` value",156,null],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",156,null],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",156,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",156,null],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",156,null],[11,"unwrap_or","","Returns the contained value or a default.",156,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",156,null],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",156,null],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",156,null],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",156,null],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",156,null],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",156,null],[11,"iter","","Returns an iterator over the possibly contained value.",156,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",156,null],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",156,null],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",156,null],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",156,null],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",156,null],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",156,null],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",156,null],[11,"unwrap_or_default","","Returns the contained value or a default",156,null],[11,"hash","core::num","",157,null],[11,"default","","",157,{"inputs":[],"output":{"name":"wrapping"}}],[11,"clone","","",157,null],[11,"cmp","","",157,null],[11,"partial_cmp","","",157,null],[11,"lt","","",157,null],[11,"le","","",157,null],[11,"gt","","",157,null],[11,"ge","","",157,null],[11,"eq","","",157,null],[11,"ne","","",157,null],[11,"fmt","","",157,null],[11,"fmt","","",157,null],[11,"shl","","",157,null],[11,"shl_assign","","",157,null],[11,"shr","","",157,null],[11,"shr_assign","","",157,null],[11,"shl","","",157,null],[11,"shl_assign","","",157,null],[11,"shr","","",157,null],[11,"shr_assign","","",157,null],[11,"shl","","",157,null],[11,"shl_assign","","",157,null],[11,"shr","","",157,null],[11,"shr_assign","","",157,null],[11,"shl","","",157,null],[11,"shl_assign","","",157,null],[11,"shr","","",157,null],[11,"shr_assign","","",157,null],[11,"shl","","",157,null],[11,"shl_assign","","",157,null],[11,"shr","","",157,null],[11,"shr_assign","","",157,null],[11,"shl","","",157,null],[11,"shl_assign","","",157,null],[11,"shr","","",157,null],[11,"shr_assign","","",157,null],[11,"shl","","",157,null],[11,"shl_assign","","",157,null],[11,"shr","","",157,null],[11,"shr_assign","","",157,null],[11,"shl","","",157,null],[11,"shl_assign","","",157,null],[11,"shr","","",157,null],[11,"shr_assign","","",157,null],[11,"shl","","",157,null],[11,"shl_assign","","",157,null],[11,"shr","","",157,null],[11,"shr_assign","","",157,null],[11,"shl","","",157,null],[11,"shl_assign","","",157,null],[11,"shr","","",157,null],[11,"shr_assign","","",157,null],[11,"add","","",157,null],[11,"add_assign","","",157,null],[11,"sub","","",157,null],[11,"sub_assign","","",157,null],[11,"mul","","",157,null],[11,"mul_assign","","",157,null],[11,"div","","",157,null],[11,"div_assign","","",157,null],[11,"rem","","",157,null],[11,"rem_assign","","",157,null],[11,"not","","",157,null],[11,"bitxor","","",157,null],[11,"bitxor_assign","","",157,null],[11,"bitor","","",157,null],[11,"bitor_assign","","",157,null],[11,"bitand","","",157,null],[11,"bitand_assign","","",157,null],[11,"neg","","",157,null],[11,"add","","",157,null],[11,"add_assign","","",157,null],[11,"sub","","",157,null],[11,"sub_assign","","",157,null],[11,"mul","","",157,null],[11,"mul_assign","","",157,null],[11,"div","","",157,null],[11,"div_assign","","",157,null],[11,"rem","","",157,null],[11,"rem_assign","","",157,null],[11,"not","","",157,null],[11,"bitxor","","",157,null],[11,"bitxor_assign","","",157,null],[11,"bitor","","",157,null],[11,"bitor_assign","","",157,null],[11,"bitand","","",157,null],[11,"bitand_assign","","",157,null],[11,"neg","","",157,null],[11,"add","","",157,null],[11,"add_assign","","",157,null],[11,"sub","","",157,null],[11,"sub_assign","","",157,null],[11,"mul","","",157,null],[11,"mul_assign","","",157,null],[11,"div","","",157,null],[11,"div_assign","","",157,null],[11,"rem","","",157,null],[11,"rem_assign","","",157,null],[11,"not","","",157,null],[11,"bitxor","","",157,null],[11,"bitxor_assign","","",157,null],[11,"bitor","","",157,null],[11,"bitor_assign","","",157,null],[11,"bitand","","",157,null],[11,"bitand_assign","","",157,null],[11,"neg","","",157,null],[11,"add","","",157,null],[11,"add_assign","","",157,null],[11,"sub","","",157,null],[11,"sub_assign","","",157,null],[11,"mul","","",157,null],[11,"mul_assign","","",157,null],[11,"div","","",157,null],[11,"div_assign","","",157,null],[11,"rem","","",157,null],[11,"rem_assign","","",157,null],[11,"not","","",157,null],[11,"bitxor","","",157,null],[11,"bitxor_assign","","",157,null],[11,"bitor","","",157,null],[11,"bitor_assign","","",157,null],[11,"bitand","","",157,null],[11,"bitand_assign","","",157,null],[11,"neg","","",157,null],[11,"add","","",157,null],[11,"add_assign","","",157,null],[11,"sub","","",157,null],[11,"sub_assign","","",157,null],[11,"mul","","",157,null],[11,"mul_assign","","",157,null],[11,"div","","",157,null],[11,"div_assign","","",157,null],[11,"rem","","",157,null],[11,"rem_assign","","",157,null],[11,"not","","",157,null],[11,"bitxor","","",157,null],[11,"bitxor_assign","","",157,null],[11,"bitor","","",157,null],[11,"bitor_assign","","",157,null],[11,"bitand","","",157,null],[11,"bitand_assign","","",157,null],[11,"neg","","",157,null],[11,"add","","",157,null],[11,"add_assign","","",157,null],[11,"sub","","",157,null],[11,"sub_assign","","",157,null],[11,"mul","","",157,null],[11,"mul_assign","","",157,null],[11,"div","","",157,null],[11,"div_assign","","",157,null],[11,"rem","","",157,null],[11,"rem_assign","","",157,null],[11,"not","","",157,null],[11,"bitxor","","",157,null],[11,"bitxor_assign","","",157,null],[11,"bitor","","",157,null],[11,"bitor_assign","","",157,null],[11,"bitand","","",157,null],[11,"bitand_assign","","",157,null],[11,"neg","","",157,null],[11,"add","","",157,null],[11,"add_assign","","",157,null],[11,"sub","","",157,null],[11,"sub_assign","","",157,null],[11,"mul","","",157,null],[11,"mul_assign","","",157,null],[11,"div","","",157,null],[11,"div_assign","","",157,null],[11,"rem","","",157,null],[11,"rem_assign","","",157,null],[11,"not","","",157,null],[11,"bitxor","","",157,null],[11,"bitxor_assign","","",157,null],[11,"bitor","","",157,null],[11,"bitor_assign","","",157,null],[11,"bitand","","",157,null],[11,"bitand_assign","","",157,null],[11,"neg","","",157,null],[11,"add","","",157,null],[11,"add_assign","","",157,null],[11,"sub","","",157,null],[11,"sub_assign","","",157,null],[11,"mul","","",157,null],[11,"mul_assign","","",157,null],[11,"div","","",157,null],[11,"div_assign","","",157,null],[11,"rem","","",157,null],[11,"rem_assign","","",157,null],[11,"not","","",157,null],[11,"bitxor","","",157,null],[11,"bitxor_assign","","",157,null],[11,"bitor","","",157,null],[11,"bitor_assign","","",157,null],[11,"bitand","","",157,null],[11,"bitand_assign","","",157,null],[11,"neg","","",157,null],[11,"add","","",157,null],[11,"add_assign","","",157,null],[11,"sub","","",157,null],[11,"sub_assign","","",157,null],[11,"mul","","",157,null],[11,"mul_assign","","",157,null],[11,"div","","",157,null],[11,"div_assign","","",157,null],[11,"rem","","",157,null],[11,"rem_assign","","",157,null],[11,"not","","",157,null],[11,"bitxor","","",157,null],[11,"bitxor_assign","","",157,null],[11,"bitor","","",157,null],[11,"bitor_assign","","",157,null],[11,"bitand","","",157,null],[11,"bitand_assign","","",157,null],[11,"neg","","",157,null],[11,"add","","",157,null],[11,"add_assign","","",157,null],[11,"sub","","",157,null],[11,"sub_assign","","",157,null],[11,"mul","","",157,null],[11,"mul_assign","","",157,null],[11,"div","","",157,null],[11,"div_assign","","",157,null],[11,"rem","","",157,null],[11,"rem_assign","","",157,null],[11,"not","","",157,null],[11,"bitxor","","",157,null],[11,"bitxor_assign","","",157,null],[11,"bitor","","",157,null],[11,"bitor_assign","","",157,null],[11,"bitand","","",157,null],[11,"bitand_assign","","",157,null],[11,"neg","","",157,null],[11,"eq","core::num::dec2flt","",158,null],[11,"ne","","",158,null],[11,"clone","","",158,null],[11,"fmt","","",158,null],[11,"fmt","","",158,null],[11,"fmt","core::num","",159,null],[11,"eq","","",159,null],[11,"clone","","",159,null],[11,"clone","","",160,null],[11,"fmt","","",160,null],[11,"fmt","","",160,null],[11,"eq","","",161,null],[11,"ne","","",161,null],[11,"clone","","",161,null],[11,"fmt","","",161,null],[11,"fmt","","",161,null],[11,"hash","core::nonzero","",162,null],[11,"fmt","","",162,null],[11,"partial_cmp","","",162,null],[11,"lt","","",162,null],[11,"le","","",162,null],[11,"gt","","",162,null],[11,"ge","","",162,null],[11,"cmp","","",162,null],[11,"eq","","",162,null],[11,"ne","","",162,null],[11,"clone","","",162,null],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually &quot;non-zero&quot;.",162,{"inputs":[{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",162,null],[11,"new","core::ptr","Creates a new `Unique`.",163,null],[11,"get","","Dereferences the content.",163,null],[11,"get_mut","","Mutably dereferences the content.",163,null],[11,"deref","","",163,null],[11,"fmt","","",163,null],[11,"new","","Creates a new `Shared`.",164,null],[11,"clone","","",164,null],[11,"deref","","",164,null],[11,"fmt","","",164,null],[11,"hash","core::marker","",165,null],[11,"eq","","",165,null],[11,"partial_cmp","","",165,null],[11,"cmp","","",165,null],[11,"clone","","",165,null],[11,"default","","",165,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",166,null],[11,"clone","","",166,null],[11,"fmt","","",166,null],[11,"eq","","",120,null],[11,"ne","","",120,null],[11,"clone","","",120,null],[11,"fmt","","",120,null],[11,"contains","","# Examples",120,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"clone","","",118,null],[11,"fmt","","",118,null],[11,"contains","","# Examples",118,null],[11,"eq","","",119,null],[11,"ne","","",119,null],[11,"clone","","",119,null],[11,"fmt","","",119,null],[11,"contains","","# Examples",119,null],[11,"eq","","",167,null],[11,"ne","","",167,null],[11,"clone","","",167,null],[11,"fmt","","",167,null],[11,"from","","",167,{"inputs":[{"name":"range"}],"output":{"name":"rangeinclusive"}}],[11,"contains","","# Examples",167,null],[11,"eq","","",168,null],[11,"ne","","",168,null],[11,"clone","","",168,null],[11,"fmt","","",168,null],[11,"contains","","# Examples",168,null],[11,"hash","core::cmp","",169,null],[11,"fmt","","",169,null],[11,"eq","","",169,null],[11,"clone","","",169,null],[11,"reverse","","Reverse the `Ordering`.",169,null],[11,"cmp","","",169,null],[11,"partial_cmp","","",169,null],[11,"fmt","hyper::header::internals","",170,null],[11,"fmt","","",170,null],[11,"is","","Returns true if the boxed type is the same as `T`",170,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",170,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",170,null],[11,"is","","Forwards to the method defined on the type `Any`.",170,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",170,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",170,null],[11,"hash","core::any","",171,null],[11,"fmt","","",171,null],[11,"eq","","",171,null],[11,"ne","","",171,null],[11,"clone","","",171,null],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",171,{"inputs":[],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",172,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",173,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",174,null],[11,"clone","","",174,null],[11,"new","","Creates a new `AtomicBool`.",172,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",172,null],[11,"store","","Stores a value into the bool.",172,null],[11,"swap","","Stores a value into the bool, returning the old value.",172,null],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",172,null],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",172,null],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",172,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",172,null],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",172,null],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",172,null],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",172,null],[11,"new","","Creates a new `AtomicPtr`.",173,null],[11,"load","","Loads a value from the pointer.",173,null],[11,"store","","Stores a value into the pointer.",173,null],[11,"swap","","Stores a value into the pointer, returning the old value.",173,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",173,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",173,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",173,null],[11,"default","","",175,{"inputs":[],"output":{"name":"atomici8"}}],[11,"fmt","","",175,null],[11,"new","","Creates a new atomic integer.",175,{"inputs":[{"name":"i8"}],"output":{"name":"atomici8"}}],[11,"load","","Loads a value from the atomic integer.",175,null],[11,"store","","Stores a value into the atomic integer.",175,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",175,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",175,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",175,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",175,null],[11,"fetch_add","","Add to the current value, returning the previous value.",175,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",175,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",175,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",175,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",175,null],[11,"default","","",176,{"inputs":[],"output":{"name":"atomicu8"}}],[11,"fmt","","",176,null],[11,"new","","Creates a new atomic integer.",176,{"inputs":[{"name":"u8"}],"output":{"name":"atomicu8"}}],[11,"load","","Loads a value from the atomic integer.",176,null],[11,"store","","Stores a value into the atomic integer.",176,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",176,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",176,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",176,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",176,null],[11,"fetch_add","","Add to the current value, returning the previous value.",176,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",176,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",176,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",176,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",176,null],[11,"default","","",177,{"inputs":[],"output":{"name":"atomici16"}}],[11,"fmt","","",177,null],[11,"new","","Creates a new atomic integer.",177,{"inputs":[{"name":"i16"}],"output":{"name":"atomici16"}}],[11,"load","","Loads a value from the atomic integer.",177,null],[11,"store","","Stores a value into the atomic integer.",177,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",177,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",177,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",177,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",177,null],[11,"fetch_add","","Add to the current value, returning the previous value.",177,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",177,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",177,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",177,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",177,null],[11,"default","","",178,{"inputs":[],"output":{"name":"atomicu16"}}],[11,"fmt","","",178,null],[11,"new","","Creates a new atomic integer.",178,{"inputs":[{"name":"u16"}],"output":{"name":"atomicu16"}}],[11,"load","","Loads a value from the atomic integer.",178,null],[11,"store","","Stores a value into the atomic integer.",178,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",178,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",178,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",178,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",178,null],[11,"fetch_add","","Add to the current value, returning the previous value.",178,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",178,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",178,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",178,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",178,null],[11,"default","","",179,{"inputs":[],"output":{"name":"atomici32"}}],[11,"fmt","","",179,null],[11,"new","","Creates a new atomic integer.",179,{"inputs":[{"name":"i32"}],"output":{"name":"atomici32"}}],[11,"load","","Loads a value from the atomic integer.",179,null],[11,"store","","Stores a value into the atomic integer.",179,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",179,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",179,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",179,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",179,null],[11,"fetch_add","","Add to the current value, returning the previous value.",179,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",179,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",179,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",179,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",179,null],[11,"default","","",180,{"inputs":[],"output":{"name":"atomicu32"}}],[11,"fmt","","",180,null],[11,"new","","Creates a new atomic integer.",180,{"inputs":[{"name":"u32"}],"output":{"name":"atomicu32"}}],[11,"load","","Loads a value from the atomic integer.",180,null],[11,"store","","Stores a value into the atomic integer.",180,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",180,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",180,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",180,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",180,null],[11,"fetch_add","","Add to the current value, returning the previous value.",180,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",180,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",180,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",180,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",180,null],[11,"default","","",181,{"inputs":[],"output":{"name":"atomici64"}}],[11,"fmt","","",181,null],[11,"new","","Creates a new atomic integer.",181,{"inputs":[{"name":"i64"}],"output":{"name":"atomici64"}}],[11,"load","","Loads a value from the atomic integer.",181,null],[11,"store","","Stores a value into the atomic integer.",181,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",181,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",181,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",181,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",181,null],[11,"fetch_add","","Add to the current value, returning the previous value.",181,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",181,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",181,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",181,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",181,null],[11,"default","","",182,{"inputs":[],"output":{"name":"atomicu64"}}],[11,"fmt","","",182,null],[11,"new","","Creates a new atomic integer.",182,{"inputs":[{"name":"u64"}],"output":{"name":"atomicu64"}}],[11,"load","","Loads a value from the atomic integer.",182,null],[11,"store","","Stores a value into the atomic integer.",182,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",182,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",182,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",182,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",182,null],[11,"fetch_add","","Add to the current value, returning the previous value.",182,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",182,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",182,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",182,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",182,null],[11,"default","","",183,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"fmt","","",183,null],[11,"new","","Creates a new atomic integer.",183,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the atomic integer.",183,null],[11,"store","","Stores a value into the atomic integer.",183,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",183,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",183,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",183,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",183,null],[11,"fetch_add","","Add to the current value, returning the previous value.",183,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",183,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",183,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",183,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",183,null],[11,"default","","",184,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"fmt","","",184,null],[11,"new","","Creates a new atomic integer.",184,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the atomic integer.",184,null],[11,"store","","Stores a value into the atomic integer.",184,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",184,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",184,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",184,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",184,null],[11,"fetch_add","","Add to the current value, returning the previous value.",184,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",184,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",184,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",184,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",184,null],[11,"fmt","","",172,null],[11,"fmt","","",173,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",185,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",185,null],[11,"set","","Sets the contained value.",185,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",185,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",185,null],[11,"clone","","",185,null],[11,"default","","",185,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",185,null],[11,"partial_cmp","","",185,null],[11,"lt","","",185,null],[11,"le","","",185,null],[11,"gt","","",185,null],[11,"ge","","",185,null],[11,"cmp","","",185,null],[11,"fmt","","",186,null],[11,"eq","","",186,null],[11,"clone","","",186,null],[11,"new","","Creates a new `RefCell` containing `value`.",187,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",187,null],[11,"borrow_state","","Query the current state of this `RefCell`",187,null],[11,"borrow","","Immutably borrows the wrapped value.",187,null],[11,"borrow_mut","","Mutably borrows the wrapped value.",187,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",187,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",187,null],[11,"clone","","",187,null],[11,"default","","",187,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",187,null],[11,"partial_cmp","","",187,null],[11,"lt","","",187,null],[11,"le","","",187,null],[11,"gt","","",187,null],[11,"ge","","",187,null],[11,"cmp","","",187,null],[11,"deref","","",188,null],[11,"clone","","Copies a `Ref`.",188,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",188,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",188,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",189,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",189,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"deref","","",189,null],[11,"deref_mut","","",189,null],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",190,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",190,null],[11,"get","","Gets a mutable pointer to the wrapped value.",190,null],[11,"default","","",190,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"fmt","core::char","",191,null],[11,"clone","","",191,null],[11,"next","","",191,null],[11,"size_hint","","",191,null],[11,"last","","",191,null],[11,"fmt","","",192,null],[11,"clone","","",192,null],[11,"next","","",192,null],[11,"size_hint","","",192,null],[11,"count","","",192,null],[11,"nth","","",192,null],[11,"last","","",192,null],[11,"fmt","","",193,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",193,null],[11,"next","","",193,null],[11,"size_hint","","",193,null],[11,"fmt","","",194,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",194,null],[11,"next","","",194,null],[11,"size_hint","","",194,null],[11,"fmt","core::iter::range","",195,null],[11,"clone","","",195,null],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",118,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",120,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",167,null],[11,"next","core::iter::range","",195,null],[11,"size_hint","","",195,null],[11,"next","","",195,null],[11,"size_hint","","",195,null],[11,"next","","",195,null],[11,"size_hint","","",195,null],[11,"next","core::ops","",120,null],[11,"size_hint","","",120,null],[11,"next_back","","",120,null],[11,"next","","",118,null],[11,"next","","",167,null],[11,"size_hint","","",167,null],[11,"next_back","","",167,null],[11,"fmt","core::iter::sources","",196,null],[11,"clone","","",196,null],[11,"next","","",196,null],[11,"size_hint","","",196,null],[11,"next_back","","",196,null],[11,"fmt","","",197,null],[11,"next","","",197,null],[11,"size_hint","","",197,null],[11,"next_back","","",197,null],[11,"len","","",197,null],[11,"clone","","",197,null],[11,"default","","",197,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",198,null],[11,"clone","","",198,null],[11,"next","","",198,null],[11,"size_hint","","",198,null],[11,"next_back","","",198,null],[11,"len","","",198,null],[11,"fmt","core::iter","",199,null],[11,"clone","","",199,null],[11,"next","","",199,null],[11,"size_hint","","",199,null],[11,"next_back","","",199,null],[11,"fmt","","",200,null],[11,"clone","","",200,null],[11,"next","","",200,null],[11,"size_hint","","",200,null],[11,"next_back","","",200,null],[11,"fmt","","",201,null],[11,"clone","","",201,null],[11,"next","","",201,null],[11,"size_hint","","",201,null],[11,"fmt","","",202,null],[11,"clone","","",202,null],[11,"next","","",202,null],[11,"count","","",202,null],[11,"nth","","",202,null],[11,"find","","",202,null],[11,"last","","",202,null],[11,"size_hint","","",202,null],[11,"next_back","","",202,null],[11,"fmt","","",203,null],[11,"clone","","",203,null],[11,"next","","",203,null],[11,"size_hint","","",203,null],[11,"next_back","","",203,null],[11,"clone","","",204,null],[11,"fmt","","",204,null],[11,"next","","",204,null],[11,"size_hint","","",204,null],[11,"next_back","","",204,null],[11,"clone","","",205,null],[11,"fmt","","",205,null],[11,"next","","",205,null],[11,"size_hint","","",205,null],[11,"next_back","","",205,null],[11,"clone","","",206,null],[11,"fmt","","",206,null],[11,"next","","",206,null],[11,"size_hint","","",206,null],[11,"next_back","","",206,null],[11,"fmt","","",207,null],[11,"clone","","",207,null],[11,"next","","# Overflow Behavior",207,null],[11,"size_hint","","",207,null],[11,"nth","","",207,null],[11,"count","","",207,null],[11,"next_back","","",207,null],[11,"fmt","","",208,null],[11,"clone","","",208,null],[11,"next","","",208,null],[11,"count","","",208,null],[11,"nth","","",208,null],[11,"last","","",208,null],[11,"size_hint","","",208,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",208,null],[11,"is_empty","","Checks if the iterator has finished iterating.",208,null],[11,"clone","","",209,null],[11,"fmt","","",209,null],[11,"next","","",209,null],[11,"size_hint","","",209,null],[11,"clone","","",210,null],[11,"fmt","","",210,null],[11,"next","","",210,null],[11,"size_hint","","",210,null],[11,"fmt","","",211,null],[11,"clone","","",211,null],[11,"next","","",211,null],[11,"nth","","",211,null],[11,"count","","",211,null],[11,"last","","",211,null],[11,"size_hint","","",211,null],[11,"next_back","","",211,null],[11,"fmt","","",212,null],[11,"clone","","",212,null],[11,"next","","",212,null],[11,"nth","","",212,null],[11,"size_hint","","",212,null],[11,"clone","","",213,null],[11,"fmt","","",213,null],[11,"next","","",213,null],[11,"size_hint","","",213,null],[11,"clone","","",214,null],[11,"fmt","","",214,null],[11,"next","","",214,null],[11,"size_hint","","",214,null],[11,"next_back","","",214,null],[11,"fmt","","",215,null],[11,"clone","","",215,null],[11,"next","","",215,null],[11,"nth","","",215,null],[11,"last","","",215,null],[11,"count","","",215,null],[11,"size_hint","","",215,null],[11,"next_back","","",215,null],[11,"clone","","",216,null],[11,"fmt","","",216,null],[11,"next","","",216,null],[11,"size_hint","","",216,null],[11,"next_back","","",216,null],[11,"hash","core::option","",156,null],[11,"fmt","","",156,null],[11,"cmp","","",156,null],[11,"partial_cmp","","",156,null],[11,"lt","","",156,null],[11,"le","","",156,null],[11,"gt","","",156,null],[11,"ge","","",156,null],[11,"eq","","",156,null],[11,"ne","","",156,null],[11,"clone","","",156,null],[11,"default","","",156,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",156,null],[11,"fmt","","",217,null],[11,"next","","",217,null],[11,"size_hint","","",217,null],[11,"next_back","","",217,null],[11,"clone","","",217,null],[11,"fmt","","",218,null],[11,"next","","",218,null],[11,"size_hint","","",218,null],[11,"next_back","","",218,null],[11,"fmt","","",219,null],[11,"clone","","",219,null],[11,"next","","",219,null],[11,"size_hint","","",219,null],[11,"next_back","","",219,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",156,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",220,null],[11,"clone","","",221,null],[11,"hash","core::result","",222,null],[11,"fmt","","",222,null],[11,"cmp","","",222,null],[11,"partial_cmp","","",222,null],[11,"lt","","",222,null],[11,"le","","",222,null],[11,"gt","","",222,null],[11,"ge","","",222,null],[11,"eq","","",222,null],[11,"ne","","",222,null],[11,"clone","","",222,null],[11,"is_ok","","Returns true if the result is `Ok`",222,null],[11,"is_err","","Returns true if the result is `Err`",222,null],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",222,null],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",222,null],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",222,null],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",222,null],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",222,null],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",222,null],[11,"iter","","Returns an iterator over the possibly contained value.",222,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",222,null],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",222,null],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",222,null],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",222,null],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",222,null],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",222,null],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",222,null],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",222,null],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",222,null],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",222,null],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",222,null],[11,"fmt","","",223,null],[11,"next","","",223,null],[11,"size_hint","","",223,null],[11,"next_back","","",223,null],[11,"clone","","",223,null],[11,"fmt","","",224,null],[11,"next","","",224,null],[11,"size_hint","","",224,null],[11,"next_back","","",224,null],[11,"fmt","","",225,null],[11,"next","","",225,null],[11,"size_hint","","",225,null],[11,"next_back","","",225,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",222,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::slice","",226,null],[11,"as_slice","","View the underlying data as a subslice of the original data.",226,null],[11,"next","","",226,null],[11,"size_hint","","",226,null],[11,"count","","",226,null],[11,"nth","","",226,null],[11,"last","","",226,null],[11,"next_back","","",226,null],[11,"clone","","",226,null],[11,"fmt","","",227,null],[11,"into_slice","","View the underlying data as a subslice of the original data.",227,null],[11,"next","","",227,null],[11,"size_hint","","",227,null],[11,"count","","",227,null],[11,"nth","","",227,null],[11,"last","","",227,null],[11,"next_back","","",227,null],[11,"fmt","","",228,null],[11,"clone","","",228,null],[11,"next","","",228,null],[11,"size_hint","","",228,null],[11,"next_back","","",228,null],[11,"fmt","","",229,null],[11,"next","","",229,null],[11,"size_hint","","",229,null],[11,"next_back","","",229,null],[11,"fmt","","",230,null],[11,"fmt","","",231,null],[11,"fmt","","",232,null],[11,"fmt","","",233,null],[11,"next","","",230,null],[11,"size_hint","","",230,null],[11,"next","","",231,null],[11,"size_hint","","",231,null],[11,"next","","",232,null],[11,"size_hint","","",232,null],[11,"next","","",233,null],[11,"size_hint","","",233,null],[11,"fmt","","",234,null],[11,"clone","","",234,null],[11,"next","","",234,null],[11,"size_hint","","",234,null],[11,"count","","",234,null],[11,"nth","","",234,null],[11,"last","","",234,null],[11,"next_back","","",234,null],[11,"fmt","","",235,null],[11,"clone","","",235,null],[11,"next","","",235,null],[11,"size_hint","","",235,null],[11,"count","","",235,null],[11,"nth","","",235,null],[11,"last","","",235,null],[11,"next_back","","",235,null],[11,"fmt","","",236,null],[11,"next","","",236,null],[11,"size_hint","","",236,null],[11,"count","","",236,null],[11,"nth","","",236,null],[11,"last","","",236,null],[11,"next_back","","",236,null],[11,"eq","core::str","",237,null],[11,"ne","","",237,null],[11,"clone","","",237,null],[11,"fmt","","",237,null],[11,"fmt","","",237,null],[11,"fmt","","",238,null],[11,"clone","","",238,null],[11,"eq","","",238,null],[11,"ne","","",238,null],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",238,null],[11,"fmt","","",238,null],[11,"fmt","","",239,null],[11,"clone","","",239,null],[11,"next","","",239,null],[11,"size_hint","","",239,null],[11,"next_back","","",239,null],[11,"as_str","","View the underlying data as a subslice of the original data.",239,null],[11,"fmt","","",240,null],[11,"clone","","",240,null],[11,"next","","",240,null],[11,"size_hint","","",240,null],[11,"next_back","","",240,null],[11,"as_str","","View the underlying data as a subslice of the original data.",240,null],[11,"fmt","","",241,null],[11,"clone","","",241,null],[11,"next","","",241,null],[11,"size_hint","","",241,null],[11,"count","","",241,null],[11,"last","","",241,null],[11,"nth","","",241,null],[11,"next_back","","",241,null],[11,"len","","",241,null],[11,"fmt","","",242,null],[11,"next","","",242,null],[11,"clone","","",242,null],[11,"fmt","","",243,null],[11,"next","","",243,null],[11,"clone","","",243,null],[11,"next_back","","",242,null],[11,"next_back","","",243,null],[11,"fmt","","",244,null],[11,"next","","",244,null],[11,"clone","","",244,null],[11,"fmt","","",245,null],[11,"next","","",245,null],[11,"clone","","",245,null],[11,"next_back","","",244,null],[11,"next_back","","",245,null],[11,"fmt","","",246,null],[11,"next","","",246,null],[11,"clone","","",246,null],[11,"fmt","","",247,null],[11,"next","","",247,null],[11,"clone","","",247,null],[11,"fmt","","",248,null],[11,"next","","",248,null],[11,"clone","","",248,null],[11,"fmt","","",249,null],[11,"next","","",249,null],[11,"clone","","",249,null],[11,"next_back","","",248,null],[11,"next_back","","",249,null],[11,"fmt","","",250,null],[11,"next","","",250,null],[11,"clone","","",250,null],[11,"fmt","","",251,null],[11,"next","","",251,null],[11,"clone","","",251,null],[11,"next_back","","",250,null],[11,"next_back","","",251,null],[11,"fmt","","",252,null],[11,"clone","","",252,null],[11,"next","","",252,null],[11,"size_hint","","",252,null],[11,"next_back","","",252,null],[11,"fmt","","",253,null],[11,"clone","","",253,null],[11,"next","","",253,null],[11,"size_hint","","",253,null],[11,"next_back","","",253,null],[11,"fmt","","",254,null],[11,"clone","","",254,null],[11,"fmt","core::hash::sip","",255,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",255,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",255,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",255,null],[11,"finish","","",255,null],[11,"clone","","",255,null],[11,"default","","",255,{"inputs":[],"output":{"name":"siphasher"}}],[11,"fmt","core::hash","",256,null],[11,"build_hasher","","",256,null],[11,"clone","","",256,null],[11,"default","","",256,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"fmt","core::fmt","",257,null],[11,"field","core::fmt::builders","Adds a new field to the generated struct output.",258,null],[11,"finish","","Finishes output and returns any error encountered.",258,null],[11,"field","","Adds a new field to the generated tuple struct output.",259,null],[11,"finish","","Finishes output and returns any error encountered.",259,null],[11,"entry","","Adds a new entry to the set output.",260,null],[11,"entries","","Adds the contents of an iterator of entries to the set output.",260,null],[11,"finish","","Finishes output and returns any error encountered.",260,null],[11,"entry","","Adds a new entry to the list output.",261,null],[11,"entries","","Adds the contents of an iterator of entries to the list output.",261,null],[11,"finish","","Finishes output and returns any error encountered.",261,null],[11,"entry","","Adds a new entry to the map output.",262,null],[11,"entries","","Adds the contents of an iterator of entries to the map output.",262,null],[11,"finish","","Finishes output and returns any error encountered.",262,null],[11,"partial_cmp","core::fmt","",263,null],[11,"eq","","",263,null],[11,"cmp","","",263,null],[11,"hash","","",263,null],[11,"default","","",263,{"inputs":[],"output":{"name":"error"}}],[11,"fmt","","",263,null],[11,"clone","","",263,null],[11,"clone","","",264,null],[11,"fmt","","",264,null],[11,"fmt","","",264,null],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",265,null],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",265,null],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",265,null],[11,"write_fmt","","Writes some formatted information into this instance",265,null],[11,"flags","","Flags for formatting (packed version of rt::Flag)",265,null],[11,"fill","","Character used as &#39;fill&#39; whenever there is alignment",265,null],[11,"align","","Flag indicating what form of alignment was requested",265,null],[11,"width","","Optionally specified integer width that the output should be",265,null],[11,"precision","","Optionally specified precision for numeric types",265,null],[11,"sign_plus","","Determines if the `+` flag was specified.",265,null],[11,"sign_minus","","Determines if the `-` flag was specified.",265,null],[11,"alternate","","Determines if the `#` flag was specified.",265,null],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",265,null],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",265,null],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",265,null],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",265,null],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",265,null],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",265,null],[11,"write_str","","",265,null],[11,"write_char","","",265,null],[11,"write_fmt","","",265,null],[11,"fmt","","",263,null],[11,"fmt","core::marker","",165,null],[11,"fmt","core::cell","",185,null],[11,"fmt","","",187,null],[11,"fmt","","",188,null],[11,"fmt","","",189,null],[11,"fmt","","",190,null],[11,"fmt","hyper::header","",266,null],[11,"clone","","",266,null],[11,"len","","Returns the amount of lines.",266,null],[11,"one","","Returns the line if there is only 1.",266,null],[11,"iter","","Iterate the lines of raw bytes.",266,null],[11,"push","","Append a line to this `Raw` header value.",266,null],[11,"eq","","",266,null],[11,"eq","","",266,null],[11,"eq","","",266,null],[11,"eq","","",266,null],[11,"eq","","",266,null],[11,"eq","","",266,null],[11,"eq","","",266,null],[11,"from","","",266,{"inputs":[{"name":"vec"}],"output":{"name":"raw"}}],[11,"from","","",266,{"inputs":[{"name":"string"}],"output":{"name":"raw"}}],[11,"from","","",266,{"inputs":[{"name":"vec"}],"output":{"name":"raw"}}],[11,"from","","",266,{"inputs":[{"name":"str"}],"output":{"name":"raw"}}],[11,"from","","",266,null],[11,"from","","",266,{"inputs":[{"name":"bytes"}],"output":{"name":"raw"}}],[11,"index","","",266,null],[11,"eq","","",61,null],[11,"ne","","",61,null],[11,"fmt","","",61,null],[11,"clone","","",61,null],[11,"fmt","","",61,null],[11,"from_str","","",61,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",62,null],[11,"eq","","",62,null],[11,"ne","","",62,null],[11,"clone","","",62,null],[11,"fmt","","",62,null],[11,"from_str","","",62,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",17,null],[11,"ne","","",17,null],[11,"fmt","","",17,null],[11,"clone","","",17,null],[11,"new","","Constructs a new EntityTag.\n# Panics\nIf the tag contains invalid characters.",17,{"inputs":[{"name":"bool"},{"name":"string"}],"output":{"name":"entitytag"}}],[11,"weak","","Constructs a new weak EntityTag.\n# Panics\nIf the tag contains invalid characters.",17,{"inputs":[{"name":"string"}],"output":{"name":"entitytag"}}],[11,"strong","","Constructs a new strong EntityTag.\n# Panics\nIf the tag contains invalid characters.",17,{"inputs":[{"name":"string"}],"output":{"name":"entitytag"}}],[11,"tag","","Get the tag.",17,null],[11,"set_tag","","Set the tag.\n# Panics\nIf the tag contains invalid characters.",17,null],[11,"strong_eq","","For strong comparison two entity-tags are equivalent if both are not weak and their\nopaque-tags match character-by-character.",17,null],[11,"weak_eq","","For weak comparison two entity-tags are equivalent if their\nopaque-tags match character-by-character, regardless of either or\nboth being tagged as &quot;weak&quot;.",17,null],[11,"strong_ne","","The inverse of `EntityTag.strong_eq()`.",17,null],[11,"weak_ne","","The inverse of `EntityTag.weak_eq()`.",17,null],[11,"fmt","","",17,null],[11,"from_str","","",17,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"cmp","","",18,null],[11,"partial_cmp","","",18,null],[11,"lt","","",18,null],[11,"le","","",18,null],[11,"gt","","",18,null],[11,"ge","","",18,null],[11,"eq","","",18,null],[11,"ne","","",18,null],[11,"fmt","","",18,null],[11,"clone","","",18,null],[11,"from_str","","",18,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",18,null],[11,"partial_cmp","","",19,null],[11,"lt","","",19,null],[11,"le","","",19,null],[11,"gt","","",19,null],[11,"ge","","",19,null],[11,"eq","","",19,null],[11,"ne","","",19,null],[11,"cmp","","",19,null],[11,"fmt","","",19,null],[11,"clone","","",19,null],[11,"fmt","","",19,null],[11,"default","","",19,{"inputs":[],"output":{"name":"quality"}}],[11,"fmt","","",20,null],[11,"eq","","",20,null],[11,"ne","","",20,null],[11,"clone","","",20,null],[11,"new","","Creates a new `QualityItem` from an item and a quality.\nThe item can be of any type.\nThe quality should be a value in the range [0, 1].",20,{"inputs":[{"name":"t"},{"name":"quality"}],"output":{"name":"qualityitem"}}],[11,"partial_cmp","","",20,null],[11,"fmt","","",20,null],[11,"from_str","","",20,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[0,"parsing","","Utility functions for Header implementations.",null,null],[3,"ExtendedValue","hyper::header::parsing","An extended header parameter value (i.e., tagged with a character set and optionally,\na language), as defined in [RFC 5987](https://tools.ietf.org/html/rfc5987#section-3.2).",null,null],[12,"charset","","The character set that is used to encode the `value` to a string.",267,null],[12,"language_tag","","The human language details of the `value`, if available.",267,null],[12,"value","","The parameter value, as expressed in octets.",267,null],[5,"from_one_raw_str","","Reads a single raw string when parsing a header.",null,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[5,"from_raw_str","","Reads a raw string into a value.",null,null],[5,"from_comma_delimited","","Reads a comma-delimited raw header into a Vec.",null,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[5,"fmt_comma_delimited","","Format an array into a comma-delimited string.",null,null],[5,"parse_extended_value","","Parses extended header parameter values (`ext-value`), as defined in\n[RFC 5987](https://tools.ietf.org/html/rfc5987#section-3.2).",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"http_percent_encode","","Percent encode a sequence of bytes with a character set defined in\nhttps://tools.ietf.org/html/rfc5987#section-3.2",null,null],[11,"eq","","",267,null],[11,"ne","","",267,null],[11,"fmt","","",267,null],[11,"clone","","",267,null],[11,"fmt","","",267,null],[8,"Scheme","hyper::header","An Authorization scheme to be used in the header.",null,null],[10,"scheme","","An optional Scheme name.",268,{"inputs":[],"output":{"name":"option"}}],[10,"fmt_scheme","","Format the Scheme data into a header value.",268,null],[8,"Header","","A trait for any object that will represent a header field and value.",null,null],[10,"header_name","","Returns the name of the header field this belongs to.",269,{"inputs":[],"output":{"name":"str"}}],[10,"parse_header","","Parse a header from a raw stream of bytes.",269,{"inputs":[{"name":"raw"}],"output":{"name":"result"}}],[10,"fmt_header","","Format a header to be output into a TcpStream.",269,null],[11,"clone","alloc::boxed","",4,null],[11,"clone","hyper::header","",270,null],[11,"default","","",270,{"inputs":[],"output":{"name":"headers"}}],[11,"new","","Creates a new, empty headers map.",270,{"inputs":[],"output":{"name":"headers"}}],[11,"with_capacity","","Creates a new `Headers` struct with space reserved for `len` headers.",270,{"inputs":[{"name":"usize"}],"output":{"name":"headers"}}],[11,"set","","Set a header field to the corresponding value.",270,null],[11,"get","","Get a reference to the header field&#39;s value, if it exists.",270,null],[11,"get_mut","","Get a mutable reference to the header field&#39;s value, if it exists.",270,null],[11,"has","","Returns a boolean of whether a certain header is in the map.",270,null],[11,"remove","","Removes a header from the map, if one existed.\nReturns the header, if one has been removed and could be parsed.",270,null],[11,"iter","","Returns an iterator over the header fields.",270,null],[11,"len","","Returns the number of headers in the map.",270,null],[11,"clear","","Remove all headers from the map.",270,null],[11,"get_raw","","Access the raw value of a header.",270,null],[11,"set_raw","","Set the raw value of a header, bypassing any typed headers.",270,null],[11,"append_raw","","Append a value to raw value of this header.",270,null],[11,"remove_raw","","Remove a header by name.",270,null],[11,"eq","","",270,null],[11,"fmt","","",270,null],[11,"fmt","","",270,null],[11,"next","","",271,null],[11,"is","","Check if a HeaderView is a certain Header.",272,null],[11,"name","","Get the Header name as a slice.",272,null],[11,"value","","Cast the value to a certain Header type.",272,null],[11,"value_string","","Get just the header value as a String.",272,null],[11,"raw","","Access the raw value of the header.",272,null],[11,"fmt","","",272,null],[11,"fmt","","",272,null],[11,"extend","","",270,null],[11,"extend","","",270,null],[11,"from_iter","","",270,{"inputs":[{"name":"i"}],"output":{"name":"headers"}}],[11,"fmt","hyper","",273,null],[11,"empty","","Return an empty body stream",273,{"inputs":[],"output":{"name":"body"}}],[11,"pair","","Return a body stream with an associated sender half",273,null],[11,"poll","","",273,null],[11,"from","tokio_proto::streaming::body","",274,{"inputs":[{"name":"body"}],"output":{"name":"body"}}],[11,"from","hyper","",273,{"inputs":[{"name":"body"}],"output":{"name":"body"}}],[11,"from","","",273,{"inputs":[{"name":"receiver"}],"output":{"name":"body"}}],[11,"from","","",273,{"inputs":[{"name":"chunk"}],"output":{"name":"body"}}],[11,"from","","",273,{"inputs":[{"name":"bytes"}],"output":{"name":"body"}}],[11,"from","","",273,{"inputs":[{"name":"vec"}],"output":{"name":"body"}}],[11,"from","","",273,null],[11,"from","","",273,{"inputs":[{"name":"string"}],"output":{"name":"body"}}],[11,"from","","",273,{"inputs":[{"name":"str"}],"output":{"name":"body"}}],[11,"from","","",275,{"inputs":[{"name":"vec"}],"output":{"name":"chunk"}}],[11,"from","","",275,null],[11,"from","","",275,{"inputs":[{"name":"string"}],"output":{"name":"chunk"}}],[11,"from","","",275,{"inputs":[{"name":"str"}],"output":{"name":"chunk"}}],[11,"from","","",275,{"inputs":[{"name":"bytes"}],"output":{"name":"chunk"}}],[11,"from","bytes::bytes","",276,{"inputs":[{"name":"chunk"}],"output":{"name":"bytes"}}],[11,"deref","hyper","",275,null],[11,"as_ref","","",275,null],[11,"fmt","","",275,null],[11,"into_iter","","",275,null],[11,"extend","","",275,null],[0,"server","","HTTP Server",null,null],[8,"NewService","hyper::server","Creates new `Service` values.",null,null],[16,"Request","","Requests handled by the service",277,null],[16,"Response","","Responses given by the service",277,null],[16,"Error","","Errors produced by the service",277,null],[16,"Instance","","The `Service` value created by this factory",277,null],[10,"new_service","","Create and return a new service value.",277,null],[8,"Service","","An asynchronous function from `Request` to a `Response`.",null,null],[16,"Request","","Requests handled by the service.",5,null],[16,"Response","","Responses given by the service.",5,null],[16,"Error","","Errors produced by the service.",5,null],[16,"Future","","The future response value.",5,null],[10,"call","","Process the request and return the response asynchronously.",5,null],[3,"Request","","A request bundles several parts of an incoming `NetworkStream`, given to a `Handler`.",null,null],[3,"Response","","The Response sent to a client after receiving a Request in a Service.",null,null],[3,"Http","","An instance of the HTTP protocol, and implementation of tokio-proto&#39;s\n`ServerProto` trait.",null,null],[3,"Server","","An instance of a server created through `Http::bind`.",null,null],[11,"method","","The `Method`, such as `Get`, `Post`, etc.",278,null],[11,"headers","","The headers of the incoming request.",278,null],[11,"uri","","The target request-uri for this request.",278,null],[11,"version","","The version of HTTP for this request.",278,null],[11,"remote_addr","","The remote socket address of this request",278,null],[11,"path","","The target path of this Request.",278,null],[11,"query","","The query string of this Request.",278,null],[11,"body","","Take the `Body` of this `Request`.",278,null],[11,"deconstruct","","Deconstruct this Request into its pieces.",278,null],[11,"fmt","","",278,null],[11,"new","","Create a new Response.",279,{"inputs":[],"output":{"name":"response"}}],[11,"headers","","The headers of this response.",279,null],[11,"status","","The status of this response.",279,null],[11,"version","","The HTTP version of this response.",279,null],[11,"headers_mut","","Get a mutable reference to the Headers.",279,null],[11,"set_status","","Set the `StatusCode` for this response.",279,null],[11,"set_body","","Set the body.",279,null],[11,"with_status","","Set the status and move the Response.",279,null],[11,"with_header","","Set a header and move the Response.",279,null],[11,"with_headers","","Set the headers and move the Response.",279,null],[11,"with_body","","Set the body and move the Response.",279,null],[11,"default","","",279,{"inputs":[],"output":{"name":"response"}}],[11,"fmt","","",279,null],[11,"new","","Creates a new instance of the HTTP protocol, ready to spawn a server or\nstart accepting connections.",280,{"inputs":[],"output":{"name":"http"}}],[11,"keep_alive","","Enables or disables HTTP keep-alive.",280,null],[11,"bind","","Bind the provided `addr` and return a server ready to handle\nconnections.",280,null],[11,"bind_connection","","Use this `Http` instance to create a new server task which handles the\nconnection `io` provided.",280,null],[11,"clone","","",280,null],[11,"fmt","","",280,null],[11,"bind_transport","","",280,null],[11,"from","","",278,{"inputs":[{"name":"message"}],"output":{"name":"request"}}],[11,"into","","",279,null],[11,"local_addr","","Returns the local address that this server is bound to.",281,null],[11,"handle","","Returns a handle to the underlying event loop that this server will be\nrunning on.",281,null],[11,"shutdown_timeout","","Configure the amount of time this server will wait for a &quot;graceful\nshutdown&quot;.",281,null],[11,"run","","Execute this server infinitely.",281,null],[11,"run_until","","Execute this server until the given future, `shutdown_signal`, resolves.",281,null],[11,"fmt","","",281,null],[0,"status","hyper","HTTP status codes",null,null],[4,"StatusCode","hyper::status","An HTTP status code (`status-code` in RFC 7230 et al.).",null,null],[13,"Continue","","100 Continue\n[[RFC7231, Section 6.2.1](https://tools.ietf.org/html/rfc7231#section-6.2.1)]",282,null],[13,"SwitchingProtocols","","101 Switching Protocols\n[[RFC7231, Section 6.2.2](https://tools.ietf.org/html/rfc7231#section-6.2.2)]",282,null],[13,"Processing","","102 Processing\n[[RFC2518](https://tools.ietf.org/html/rfc2518)]",282,null],[13,"Ok","","200 OK\n[[RFC7231, Section 6.3.1](https://tools.ietf.org/html/rfc7231#section-6.3.1)]",282,null],[13,"Created","","201 Created\n[[RFC7231, Section 6.3.2](https://tools.ietf.org/html/rfc7231#section-6.3.2)]",282,null],[13,"Accepted","","202 Accepted\n[[RFC7231, Section 6.3.3](https://tools.ietf.org/html/rfc7231#section-6.3.3)]",282,null],[13,"NonAuthoritativeInformation","","203 Non-Authoritative Information\n[[RFC7231, Section 6.3.4](https://tools.ietf.org/html/rfc7231#section-6.3.4)]",282,null],[13,"NoContent","","204 No Content\n[[RFC7231, Section 6.3.5](https://tools.ietf.org/html/rfc7231#section-6.3.5)]",282,null],[13,"ResetContent","","205 Reset Content\n[[RFC7231, Section 6.3.6](https://tools.ietf.org/html/rfc7231#section-6.3.6)]",282,null],[13,"PartialContent","","206 Partial Content\n[[RFC7233, Section 4.1](https://tools.ietf.org/html/rfc7233#section-4.1)]",282,null],[13,"MultiStatus","","207 Multi-Status\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",282,null],[13,"AlreadyReported","","208 Already Reported\n[[RFC5842](https://tools.ietf.org/html/rfc5842)]",282,null],[13,"ImUsed","","226 IM Used\n[[RFC3229](https://tools.ietf.org/html/rfc3229)]",282,null],[13,"MultipleChoices","","300 Multiple Choices\n[[RFC7231, Section 6.4.1](https://tools.ietf.org/html/rfc7231#section-6.4.1)]",282,null],[13,"MovedPermanently","","301 Moved Permanently\n[[RFC7231, Section 6.4.2](https://tools.ietf.org/html/rfc7231#section-6.4.2)]",282,null],[13,"Found","","302 Found\n[[RFC7231, Section 6.4.3](https://tools.ietf.org/html/rfc7231#section-6.4.3)]",282,null],[13,"SeeOther","","303 See Other\n[[RFC7231, Section 6.4.4](https://tools.ietf.org/html/rfc7231#section-6.4.4)]",282,null],[13,"NotModified","","304 Not Modified\n[[RFC7232, Section 4.1](https://tools.ietf.org/html/rfc7232#section-4.1)]",282,null],[13,"UseProxy","","305 Use Proxy\n[[RFC7231, Section 6.4.5](https://tools.ietf.org/html/rfc7231#section-6.4.5)]",282,null],[13,"TemporaryRedirect","","307 Temporary Redirect\n[[RFC7231, Section 6.4.7](https://tools.ietf.org/html/rfc7231#section-6.4.7)]",282,null],[13,"PermanentRedirect","","308 Permanent Redirect\n[[RFC7238](https://tools.ietf.org/html/rfc7238)]",282,null],[13,"BadRequest","","400 Bad Request\n[[RFC7231, Section 6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)]",282,null],[13,"Unauthorized","","401 Unauthorized\n[[RFC7235, Section 3.1](https://tools.ietf.org/html/rfc7235#section-3.1)]",282,null],[13,"PaymentRequired","","402 Payment Required\n[[RFC7231, Section 6.5.2](https://tools.ietf.org/html/rfc7231#section-6.5.2)]",282,null],[13,"Forbidden","","403 Forbidden\n[[RFC7231, Section 6.5.3](https://tools.ietf.org/html/rfc7231#section-6.5.3)]",282,null],[13,"NotFound","","404 Not Found\n[[RFC7231, Section 6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)]",282,null],[13,"MethodNotAllowed","","405 Method Not Allowed\n[[RFC7231, Section 6.5.5](https://tools.ietf.org/html/rfc7231#section-6.5.5)]",282,null],[13,"NotAcceptable","","406 Not Acceptable\n[[RFC7231, Section 6.5.6](https://tools.ietf.org/html/rfc7231#section-6.5.6)]",282,null],[13,"ProxyAuthenticationRequired","","407 Proxy Authentication Required\n[[RFC7235, Section 3.2](https://tools.ietf.org/html/rfc7235#section-3.2)]",282,null],[13,"RequestTimeout","","408 Request Timeout\n[[RFC7231, Section 6.5.7](https://tools.ietf.org/html/rfc7231#section-6.5.7)]",282,null],[13,"Conflict","","409 Conflict\n[[RFC7231, Section 6.5.8](https://tools.ietf.org/html/rfc7231#section-6.5.8)]",282,null],[13,"Gone","","410 Gone\n[[RFC7231, Section 6.5.9](https://tools.ietf.org/html/rfc7231#section-6.5.9)]",282,null],[13,"LengthRequired","","411 Length Required\n[[RFC7231, Section 6.5.10](https://tools.ietf.org/html/rfc7231#section-6.5.10)]",282,null],[13,"PreconditionFailed","","412 Precondition Failed\n[[RFC7232, Section 4.2](https://tools.ietf.org/html/rfc7232#section-4.2)]",282,null],[13,"PayloadTooLarge","","413 Payload Too Large\n[[RFC7231, Section 6.5.11](https://tools.ietf.org/html/rfc7231#section-6.5.11)]",282,null],[13,"UriTooLong","","414 URI Too Long\n[[RFC7231, Section 6.5.12](https://tools.ietf.org/html/rfc7231#section-6.5.12)]",282,null],[13,"UnsupportedMediaType","","415 Unsupported Media Type\n[[RFC7231, Section 6.5.13](https://tools.ietf.org/html/rfc7231#section-6.5.13)]",282,null],[13,"RangeNotSatisfiable","","416 Range Not Satisfiable\n[[RFC7233, Section 4.4](https://tools.ietf.org/html/rfc7233#section-4.4)]",282,null],[13,"ExpectationFailed","","417 Expectation Failed\n[[RFC7231, Section 6.5.14](https://tools.ietf.org/html/rfc7231#section-6.5.14)]",282,null],[13,"ImATeapot","","418 I&#39;m a teapot\n[curiously, not registered by IANA, but [RFC2324](https://tools.ietf.org/html/rfc2324)]",282,null],[13,"MisdirectedRequest","","421 Misdirected Request\n[RFC7540, Section 9.1.2](http://tools.ietf.org/html/rfc7540#section-9.1.2)",282,null],[13,"UnprocessableEntity","","422 Unprocessable Entity\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",282,null],[13,"Locked","","423 Locked\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",282,null],[13,"FailedDependency","","424 Failed Dependency\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",282,null],[13,"UpgradeRequired","","426 Upgrade Required\n[[RFC7231, Section 6.5.15](https://tools.ietf.org/html/rfc7231#section-6.5.15)]",282,null],[13,"PreconditionRequired","","428 Precondition Required\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",282,null],[13,"TooManyRequests","","429 Too Many Requests\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",282,null],[13,"RequestHeaderFieldsTooLarge","","431 Request Header Fields Too Large\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",282,null],[13,"UnavailableForLegalReasons","","451 Unavailable For Legal Reasons\n[[RFC7725](http://tools.ietf.org/html/rfc7725)]",282,null],[13,"InternalServerError","","500 Internal Server Error\n[[RFC7231, Section 6.6.1](https://tools.ietf.org/html/rfc7231#section-6.6.1)]",282,null],[13,"NotImplemented","","501 Not Implemented\n[[RFC7231, Section 6.6.2](https://tools.ietf.org/html/rfc7231#section-6.6.2)]",282,null],[13,"BadGateway","","502 Bad Gateway\n[[RFC7231, Section 6.6.3](https://tools.ietf.org/html/rfc7231#section-6.6.3)]",282,null],[13,"ServiceUnavailable","","503 Service Unavailable\n[[RFC7231, Section 6.6.4](https://tools.ietf.org/html/rfc7231#section-6.6.4)]",282,null],[13,"GatewayTimeout","","504 Gateway Timeout\n[[RFC7231, Section 6.6.5](https://tools.ietf.org/html/rfc7231#section-6.6.5)]",282,null],[13,"HttpVersionNotSupported","","505 HTTP Version Not Supported\n[[RFC7231, Section 6.6.6](https://tools.ietf.org/html/rfc7231#section-6.6.6)]",282,null],[13,"VariantAlsoNegotiates","","506 Variant Also Negotiates\n[[RFC2295](https://tools.ietf.org/html/rfc2295)]",282,null],[13,"InsufficientStorage","","507 Insufficient Storage\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",282,null],[13,"LoopDetected","","508 Loop Detected\n[[RFC5842](https://tools.ietf.org/html/rfc5842)]",282,null],[13,"NotExtended","","510 Not Extended\n[[RFC2774](https://tools.ietf.org/html/rfc2774)]",282,null],[13,"NetworkAuthenticationRequired","","511 Network Authentication Required\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",282,null],[13,"Unregistered","","A status code not in the IANA HTTP status code registry or very well known",282,null],[4,"StatusClass","","The class of an HTTP `status-code`.",null,null],[13,"Informational","","1xx (Informational): The request was received, continuing process",283,null],[13,"Success","","2xx (Success): The request was successfully received, understood, and accepted",283,null],[13,"Redirection","","3xx (Redirection): Further action needs to be taken in order to complete the request",283,null],[13,"ClientError","","4xx (Client Error): The request contains bad syntax or cannot be fulfilled",283,null],[13,"ServerError","","5xx (Server Error): The server failed to fulfill an apparently valid request",283,null],[13,"NoClass","","A status code lower than 100 or higher than 599. These codes do no belong to any class.",283,null],[11,"hash","","",282,null],[11,"fmt","","",282,null],[11,"canonical_reason","","Get the standardised `reason-phrase` for this status code.",282,null],[11,"class","","Determine the class of a status code, based on its first digit.",282,null],[11,"is_informational","","Check if class is Informational.",282,null],[11,"is_success","","Check if class is Success.",282,null],[11,"is_redirection","","Check if class is Redirection.",282,null],[11,"is_client_error","","Check if class is ClientError.",282,null],[11,"is_server_error","","Check if class is ServerError.",282,null],[11,"is_strange_status","","Check if class is NoClass",282,null],[11,"fmt","","",282,null],[11,"eq","","",282,null],[11,"clone","","",282,null],[11,"partial_cmp","","",282,null],[11,"cmp","","",282,null],[11,"default","","",282,{"inputs":[],"output":{"name":"statuscode"}}],[11,"cmp","","",283,null],[11,"partial_cmp","","",283,null],[11,"eq","","",283,null],[11,"clone","","",283,null],[11,"fmt","","",283,null],[11,"default_code","","Get the default status code for the class.",283,null],[11,"hash","hyper","",284,null],[11,"clone","","",284,null],[11,"path","","Get the path of this `Uri`.",284,null],[11,"scheme","","Get the scheme of this `Uri`.",284,null],[11,"authority","","Get the authority of this `Uri`.",284,null],[11,"host","","Get the host of this `Uri`.",284,null],[11,"port","","Get the port of this `Uri`.",284,null],[11,"query","","Get the query string of this `Uri`, starting after the `?`.",284,null],[11,"from_str","","",284,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",284,null],[11,"eq","","",284,null],[11,"as_ref","","",284,null],[11,"default","","",284,{"inputs":[],"output":{"name":"uri"}}],[11,"fmt","","",284,null],[11,"fmt","","",284,null],[11,"fmt","hyper::error","",285,null],[11,"clone","","",285,null],[11,"fmt","","",285,null],[11,"description","","",285,null],[11,"fmt","hyper","",1,null],[11,"hash","","",1,null],[11,"cmp","","",1,null],[11,"clone","","",1,null],[11,"partial_cmp","","",1,null],[11,"eq","","",1,null],[11,"fmt","","",1,null],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"default","","",1,{"inputs":[],"output":{"name":"httpversion"}}],[14,"header!","","",null,null]],"paths":[[4,"Method"],[4,"HttpVersion"],[3,"Arc"],[3,"Rc"],[3,"Box"],[8,"Service"],[3,"HttpConnector"],[3,"Request"],[3,"Response"],[8,"Connect"],[3,"Client"],[3,"FutureResponse"],[3,"UseDefaultConnector"],[3,"Config"],[4,"Error"],[3,"LanguageTag"],[4,"Error"],[3,"EntityTag"],[3,"HttpDate"],[3,"Quality"],[3,"QualityItem"],[3,"Accept"],[3,"AccessControlAllowHeaders"],[3,"AccessControlAllowMethods"],[3,"AccessControlExposeHeaders"],[3,"AccessControlMaxAge"],[3,"AccessControlRequestHeaders"],[3,"AccessControlRequestMethod"],[3,"AcceptCharset"],[3,"AcceptEncoding"],[3,"AcceptLanguage"],[3,"AcceptRanges"],[3,"Allow"],[3,"Authorization"],[3,"Basic"],[3,"Bearer"],[3,"CacheControl"],[3,"Connection"],[3,"ContentDisposition"],[3,"ContentLength"],[3,"ContentEncoding"],[3,"ContentLanguage"],[3,"ContentLocation"],[3,"ContentRange"],[3,"ContentType"],[3,"Cookie"],[3,"Date"],[3,"ETag"],[3,"Expires"],[3,"From"],[3,"IfModifiedSince"],[3,"IfUnmodifiedSince"],[3,"LastModified"],[3,"Prefer"],[3,"PreferenceApplied"],[3,"SetCookie"],[3,"StrictTransportSecurity"],[3,"TransferEncoding"],[3,"Upgrade"],[3,"Protocol"],[3,"Warning"],[4,"Charset"],[4,"Encoding"],[4,"AccessControlAllowOrigin"],[4,"RangeUnit"],[4,"CacheDirective"],[4,"ConnectionOption"],[4,"DispositionType"],[4,"DispositionParam"],[4,"ContentRangeSpec"],[4,"Expect"],[4,"IfMatch"],[4,"IfNoneMatch"],[4,"IfRange"],[4,"Pragma"],[4,"Preference"],[4,"Range"],[4,"ByteRangeSpec"],[4,"ReferrerPolicy"],[4,"RetryAfter"],[4,"ProtocolName"],[4,"Vary"],[4,"RelationType"],[4,"MediaDesc"],[3,"Vec"],[3,"BinaryHeap"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"BTreeMap"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"Range"],[3,"ValuesMut"],[3,"RangeMut"],[4,"Entry"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"BTreeSet"],[3,"Iter"],[3,"IntoIter"],[3,"Range"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Intersection"],[3,"Union"],[4,"Cow"],[3,"EnumSet"],[3,"Iter"],[3,"Iter"],[3,"IntoIter"],[3,"LinkedList"],[3,"IterMut"],[3,"FrontPlace"],[3,"BackPlace"],[3,"RangeFrom"],[3,"RangeTo"],[3,"Range"],[3,"EncodeUtf16"],[3,"String"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[4,"ParseError"],[3,"Drain"],[3,"IntoIter"],[3,"Drain"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[4,"Bound"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"AccessControlAllowCredentials"],[3,"Mime"],[4,"TopLevel"],[4,"SubLevel"],[4,"Attr"],[4,"Value"],[3,"Host"],[3,"Location"],[3,"Origin"],[3,"Referer"],[3,"Server"],[3,"UserAgent"],[3,"Link"],[3,"LinkValue"],[4,"Option"],[3,"Wrapping"],[3,"ParseFloatError"],[4,"FpCategory"],[3,"TryFromIntError"],[3,"ParseIntError"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[4,"RangeInclusive"],[3,"RangeToInclusive"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[3,"EscapeDefault"],[3,"EncodeUtf8"],[3,"EncodeUtf16"],[3,"StepBy"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"CharRange"],[3,"SipHasher"],[3,"BuildHasherDefault"],[4,"Alignment"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Error"],[3,"Arguments"],[3,"Formatter"],[3,"Raw"],[3,"ExtendedValue"],[8,"Scheme"],[8,"Header"],[3,"Headers"],[3,"HeadersItems"],[3,"HeaderView"],[3,"Body"],[3,"Body"],[3,"Chunk"],[3,"Bytes"],[8,"NewService"],[3,"Request"],[3,"Response"],[3,"Http"],[3,"Server"],[4,"StatusCode"],[4,"StatusClass"],[3,"Uri"],[3,"UriError"]]};
initSearch(searchIndex);
